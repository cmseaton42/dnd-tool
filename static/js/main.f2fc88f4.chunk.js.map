{"version":3,"sources":["views/home/initiative-tracker/swords.svg","store/combatant/reducer.ts","store/persist-helpers.ts","store/index.ts","store/combatant/types.ts","views/home/initiative-tracker/form-add-combatant.tsx","views/home/initiative-tracker/form-update-initiative.tsx","views/home/initiative-tracker/form-edit-combatant.tsx","components/health-bar.tsx","views/home/initiative-tracker/combatant-card.tsx","views/home/initiative-tracker/index.tsx","views/home/index.tsx","App.tsx","serviceWorker.ts","index.tsx","views/home/initiative-tracker/skull.svg"],"names":["module","exports","initialState","combatants","rootReducer","combineReducers","combantants","state","action","type","payload","filter","c","id","map","hitPoints","remaining","value","max","Math","round","initiative","combatant","floor","random","initiativeModifier","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","devToolsEnhancer","subscribe","stringify","setItem","saveState","getState","AddCombatantForm","open","onClose","React","useState","name","setName","setType","temporary","hp","setHp","ac","setAc","initMod","setInitMod","dispatch","useDispatch","isValidName","length","isValidType","isValidHp","formValid","handleSubmit","uuid","armorClass","conditions","Dialog","maxWidth","DialogTitle","DialogContent","onSubmit","e","preventDefault","style","width","TextField","autoFocus","margin","label","fullWidth","onChange","target","required","display","newAc","parseInt","newHp","newInitMod","FormControl","InputLabel","Select","event","MenuItem","key","DialogActions","Button","color","variant","fontWeight","onClick","disabled","UpdateInitForm","init","setInit","isValidInit","inputProps","min","EditCombatantForm","HealthBar","height","showTools","amount","setAmount","isHealthy","isBloodied","isInjured","maxHeight","healthPercentage","cls","useStyles","grey","bg","healthy","injured","bloodied","show","undefined","updateHandler","method","position","Tooltip","title","className","outer","clsx","inner","top","left","alignItems","justifyContent","icon","minus","healthInput","plus","makeStyles","theme","props","background","palette","borderRadius","red","transition","green","amber","border","fontSize","textAlign","outline","padding","cursor","marginRight","CombatantCard","typeColor","getBackgroundByType","openInitDialog","setOpenInitDialog","openEditDialog","setOpenEditDialog","showBadge","setShowBadge","isDead","container","wrapper","Typography","noWrap","Chip","typeChip","size","shieldIcon","Badge","badgeContent","invisible","onMouseEnter","onMouseLeave","initChip","initIcon","clickable","edit","delete","spacer","src","SkullIcon","deadIcon","alt","spacing","overflowX","scrollbar","marginLeft","common","white","yellow","flexGrow","blue","orange","InitiativeTracker","useSelector","openCombatantForm","setOpenCombatantForm","SwordIcon","headerIcon","startIcon","flipKey","join","sort","a","b","flipId","listStyleType","flexDirection","HomePage","Grid","justify","root","item","xs","sm","md","lg","createMuiTheme","primary","main","secondary","error","boxSizing","overflow","overrides","MuiTooltip","tooltip","backgroundColor","arrow","responsiveFontSizes","history","createBrowserHistory","listen","location","ReactGA","set","page","pathname","pageview","initialize","process","REACT_APP_GOOGLE_ANALYTICS","App","Fragment","CssBaseline","ThemeProvider","exact","path","component","to","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f2fc88f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/swords.19af7b51.svg\";","import {\n    CombatantState,\n    CombantantActionTypes,\n    ADD_COMBATANT,\n    DELETE_COMBATANT,\n    UPDATE_REMAINING_HP,\n    UPDATE_INITIATIVE,\n    UPDATE_COMBATANT,\n    ROLL_INITIATIVE,\n} from \"./types\";\n\nconst initialState: CombatantState = {\n    combatants: [],\n};\n\nexport function combatantReducer(state = initialState, action: CombantantActionTypes): CombatantState {\n    switch (action.type) {\n        case ADD_COMBATANT:\n            return {\n                combatants: [...state.combatants, action.payload],\n            };\n\n        case DELETE_COMBATANT:\n            return {\n                combatants: state.combatants.filter((c) => c.id !== action.id),\n            };\n\n        case UPDATE_REMAINING_HP:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n                    return {\n                        ...c,\n                        hitPoints: {\n                            ...c.hitPoints,\n                            remaining:\n                                action.payload.value > 0\n                                    ? action.payload.value <= c.hitPoints.max\n                                        ? Math.round(action.payload.value)\n                                        : c.hitPoints.max\n                                    : 0,\n                        },\n                    };\n                }),\n            };\n\n        case UPDATE_INITIATIVE:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n                    return {\n                        ...c,\n                        initiative: action.payload.value,\n                    };\n                }),\n            };\n\n        case UPDATE_COMBATANT:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n                    return action.payload.combatant;\n                }),\n            };\n\n        case ROLL_INITIATIVE:\n            return {\n                combatants: state.combatants.map((c) => {\n                    return {\n                        ...c,\n                        initiative: Math.floor(Math.random() * 20) + 1 + c.initiativeModifier,\n                    };\n                }),\n            };\n\n        default:\n            return state;\n    }\n}\n","import { RootState } from \"./index\";\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem(\"state\");\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nexport const saveState = (state: RootState) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(\"state\", serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n","import { combineReducers, createStore, Store } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { combatantReducer } from \"./combatant/reducer\";\nimport { loadState, saveState } from \"./persist-helpers\";\n\nconst rootReducer = combineReducers({\n    combantants: combatantReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\n//@ts-ignore\nconst persistedState = loadState();\nexport const store: Store = createStore(rootReducer, persistedState, devToolsEnhancer({}));\n\n// Persist store to local storage\nstore.subscribe(() => {\n    saveState({\n        combantants: store.getState().combantants,\n    });\n});\n","import { ICombatant } from \"types/combatant\";\n\nexport interface CombatantState {\n    combatants: ICombatant[];\n}\n\nexport interface IUpdateValuePayload {\n    id: string;\n    value: number;\n}\n\nexport interface IUpdateCombatantPayload {\n    id: string;\n    combatant: ICombatant;\n}\n\nexport const ADD_COMBATANT = \"ADD_COMBATANT\";\nexport const DELETE_COMBATANT = \"DELETE_COMBATANT\";\nexport const UPDATE_COMBATANT = \"UPDATE_COMBATANT\";\nexport const UPDATE_REMAINING_HP = \"UPDATE_REMAINING_HP\";\nexport const UPDATE_INITIATIVE = \"UPDATE_INITIATIVE\";\nexport const ROLL_INITIATIVE = \"ROLL_INITIATIVE\";\n\ninterface IAddCombatantAction {\n    type: typeof ADD_COMBATANT;\n    payload: ICombatant;\n}\n\ninterface IDeleteCombatantAction {\n    type: typeof DELETE_COMBATANT;\n    id: string;\n}\n\ninterface IUpdateRemainingHpAction {\n    type: typeof UPDATE_REMAINING_HP;\n    payload: IUpdateValuePayload;\n}\n\ninterface IUpdateInitiativeAction {\n    type: typeof UPDATE_INITIATIVE;\n    payload: IUpdateValuePayload;\n}\n\ninterface IUpdateCombatantAction {\n    type: typeof UPDATE_COMBATANT;\n    payload: IUpdateCombatantPayload;\n}\n\ninterface IRollInitiativeAction {\n    type: typeof ROLL_INITIATIVE;\n}\n\nexport type CombantantActionTypes =\n    | IAddCombatantAction\n    | IDeleteCombatantAction\n    | IUpdateRemainingHpAction\n    | IUpdateInitiativeAction\n    | IUpdateCombatantAction\n    | IRollInitiativeAction;\n","import React, { Dispatch } from \"react\";\nimport { CombantantTypes, ICombatantHitPoints } from \"types/combatant\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, ADD_COMBATANT } from \"store/combatant/types\";\nimport { v4 as uuid } from \"uuid\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport interface IAddCombatantFormProps {\n    open: boolean;\n    onClose: () => void;\n}\n\nexport const AddCombatantForm: React.FC<IAddCombatantFormProps> = ({ open, onClose }) => {\n    const [name, setName] = React.useState(\"Combatant\");\n    const [type, setType] = React.useState<CombantantTypes>(\"character\");\n    const [hp, setHp] = React.useState<ICombatantHitPoints>({ max: 10, remaining: 10, temporary: 0 });\n    const [ac, setAc] = React.useState(13);\n    const [initMod, setInitMod] = React.useState(0);\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    // Evaluate form validity\n    const isValidName = name.length >= 3;\n    const isValidType = type.length > 0;\n    const isValidHp = hp.max >= hp.remaining && hp.max > 0 && hp.remaining > 0 && hp.temporary >= 0;\n    const isValidAc = ac > 0;\n    const isValidInitMod = initMod >= -10 && initMod <= 10;\n    const formValid = isValidName && isValidType && isValidHp && isValidAc && isValidInitMod;\n\n    const clearForm = () => {\n        setName(\"Combatant\");\n        setType(\"character\");\n        setHp({ max: 0, remaining: 0, temporary: 0 });\n        setAc(13);\n    };\n\n    // Form submission handler\n    const handleSubmit = () => {\n        dispatch({\n            type: ADD_COMBATANT,\n            payload: {\n                id: uuid(),\n                armorClass: ac,\n                conditions: [],\n                hitPoints: hp,\n                initiative: 10,\n                initiativeModifier: initMod,\n                name,\n                type,\n            },\n        });\n\n        clearForm();\n        onClose();\n    };\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        handleSubmit();\n    };\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setType(event.target.value as CombantantTypes);\n    };\n\n    const types: CombantantTypes[] = [\"character\", \"ally\", \"hostile\", \"neutral\"];\n\n    return (\n        <Dialog maxWidth=\"sm\" open={open} onClose={() => onClose()}>\n            <DialogTitle>Add Combatant</DialogTitle>\n\n            {/* Form content */}\n            <DialogContent>\n                <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n\n                    <div style={{ display: \"flex\" }}>\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Armor Class\"\n                            type=\"number\"\n                            fullWidth\n                            value={ac}\n                            onChange={(e) => {\n                                const newAc = parseInt(e.target.value);\n                                if (newAc > 0) setAc(newAc);\n                            }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"HP\"\n                            type=\"number\"\n                            fullWidth\n                            value={hp.max}\n                            onChange={(e) => {\n                                const newHp = parseInt(e.target.value);\n                                if (newHp > 0) setHp({ ...hp, max: newHp, remaining: newHp });\n                            }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Initiative Mod\"\n                            type=\"number\"\n                            fullWidth\n                            value={initMod}\n                            onChange={(e) => {\n                                const newInitMod = parseInt(e.target.value);\n                                if (newInitMod >= -10 && newInitMod <= 10) setInitMod(newInitMod);\n                            }}\n                            required\n                        />\n                    </div>\n                    <FormControl fullWidth>\n                        <InputLabel>Combatant Type</InputLabel>\n                        <Select value={type} onChange={handleChange} style={{ width: \"100%\" }}>\n                            {types.map((type) => (\n                                <MenuItem key={type} value={type}>\n                                    {type}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={handleSubmit}\n                    disabled={!formValid}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { Dispatch } from \"react\";\nimport { ICombatant } from \"types/combatant\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, UPDATE_INITIATIVE } from \"store/combatant/types\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport interface IUpdateInitFormProps {\n    open: boolean;\n    onClose: () => void;\n    combatant: ICombatant;\n}\n\nexport const UpdateInitForm: React.FC<IUpdateInitFormProps> = ({ open, onClose, combatant }) => {\n    const [init, setInit] = React.useState(combatant.initiative);\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    // Evaluate form validity\n    const isValidInit = init > 0 && init <= 30;\n\n    // Form submission handler\n    const handleSubmit = () => {\n        dispatch({\n            type: UPDATE_INITIATIVE,\n            payload: {\n                id: combatant.id,\n                value: init,\n            },\n        });\n\n        onClose();\n    };\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        handleSubmit();\n    };\n\n    return (\n        <Dialog maxWidth=\"sm\" open={open} onClose={() => onClose()}>\n            <DialogTitle>Update Initiative</DialogTitle>\n\n            {/* Form content */}\n            <DialogContent>\n                <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Initiative\"\n                        type=\"number\"\n                        fullWidth\n                        value={init}\n                        onChange={(e) => setInit(Math.round(parseInt(e.target.value)))}\n                        required\n                        inputProps={{ min: 0 }}\n                    />\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={handleSubmit}\n                    disabled={!isValidInit}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { Dispatch } from \"react\";\nimport { CombantantTypes, ICombatantHitPoints, ICombatant } from \"types/combatant\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, UPDATE_COMBATANT } from \"store/combatant/types\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport interface IEditCombatantFormProps {\n    open: boolean;\n    onClose: () => void;\n    combatant: ICombatant;\n}\n\nexport const EditCombatantForm: React.FC<IEditCombatantFormProps> = ({ open, onClose, combatant }) => {\n    const [name, setName] = React.useState(combatant.name);\n    const [type, setType] = React.useState<CombantantTypes>(combatant.type);\n    const [hp, setHp] = React.useState<ICombatantHitPoints>(combatant.hitPoints);\n    const [ac, setAc] = React.useState(combatant.armorClass);\n    const [initMod, setInitMod] = React.useState(combatant.initiativeModifier);\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    // Evaluate form validity\n    const isValidName = name.length >= 3;\n    const isValidType = type.length > 0;\n    const isValidHp = hp.max >= hp.remaining && hp.max > 0 && hp.remaining > 0 && hp.temporary >= 0;\n    const isValidAc = ac > 0;\n    const isValidInitMod = initMod >= -10 && initMod <= 10;\n    const formValid = isValidName && isValidType && isValidHp && isValidAc && isValidInitMod;\n\n    // Form submission handler\n    const handleSubmit = () => {\n        dispatch({\n            type: UPDATE_COMBATANT,\n            payload: {\n                id: combatant.id,\n                combatant: {\n                    id: combatant.id,\n                    armorClass: ac,\n                    conditions: combatant.conditions,\n                    hitPoints: hp,\n                    initiative: combatant.initiative,\n                    initiativeModifier: initMod,\n                    name,\n                    type,\n                },\n            },\n        });\n\n        onClose();\n    };\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        handleSubmit();\n    };\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setType(event.target.value as CombantantTypes);\n    };\n\n    const types: CombantantTypes[] = [\"character\", \"ally\", \"hostile\", \"neutral\"];\n\n    return (\n        <Dialog maxWidth=\"sm\" open={open} onClose={() => onClose()}>\n            <DialogTitle>Edit Combatant</DialogTitle>\n\n            {/* Form content */}\n            <DialogContent>\n                <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n\n                    <div style={{ display: \"flex\" }}>\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Armor Class\"\n                            type=\"number\"\n                            fullWidth\n                            value={ac}\n                            onChange={(e) => {\n                                const newAc = parseInt(e.target.value);\n                                if (newAc > 0) setAc(newAc);\n                            }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"HP\"\n                            type=\"number\"\n                            fullWidth\n                            value={hp.max}\n                            onChange={(e) => {\n                                const newHp = parseInt(e.target.value);\n                                if (newHp > 0) setHp({ ...hp, max: newHp, remaining: newHp });\n                            }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Initiative Mod\"\n                            type=\"number\"\n                            fullWidth\n                            value={initMod}\n                            onChange={(e) => {\n                                const newInitMod = parseInt(e.target.value);\n                                if (newInitMod >= -10 && newInitMod <= 10) setInitMod(newInitMod);\n                            }}\n                            required\n                        />\n                    </div>\n                    <FormControl fullWidth>\n                        <InputLabel>Combatant Type</InputLabel>\n                        <Select value={type} onChange={handleChange} style={{ width: \"100%\" }}>\n                            {types.map((type) => (\n                                <MenuItem key={type} value={type}>\n                                    {type}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={handleSubmit}\n                    disabled={!formValid}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { Dispatch } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ICombatant } from \"types/combatant\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport { red, green, amber, grey } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/AddRounded\";\nimport MinusIcon from \"@material-ui/icons/RemoveRounded\";\nimport { IMaterialColor } from \"types/material\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, UPDATE_REMAINING_HP } from \"store/combatant/types\";\n\nexport interface IHealthBarProps {\n    combatant: ICombatant;\n    color?: IMaterialColor;\n    height?: number;\n    width?: number;\n    showTools?: boolean;\n}\n\nexport const HealthBar: React.FC<IHealthBarProps> = ({ combatant, height, width, showTools, color }) => {\n    const [amount, setAmount] = React.useState(5);\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    const { hitPoints: hp } = combatant;\n    const isHealthy = hp.remaining >= hp.max * 0.666;\n    const isBloodied = hp.remaining <= hp.max * 0.3333;\n    const isInjured = !isHealthy && !isBloodied;\n\n    const maxWidth = width || 100;\n    const maxHeight = height || 10;\n    const healthPercentage = Math.round((hp.remaining / hp.max) * maxWidth);\n    const cls = useStyles({ height: maxHeight, width: maxWidth, remaining: healthPercentage, color: color || grey });\n\n    const bg = isHealthy ? cls.healthy : isInjured ? cls.injured : isBloodied ? cls.bloodied : null;\n    const show = showTools !== undefined ? showTools : true;\n\n    const updateHandler = (method: \"ADD\" | \"REMOVE\") => () => {\n        dispatch({\n            type: UPDATE_REMAINING_HP,\n            payload: {\n                id: combatant.id,\n                value: method === \"ADD\" ? hp.remaining + amount : hp.remaining - amount,\n            },\n        });\n\n        setAmount(5);\n    };\n\n    return (\n        <div style={{ position: \"relative\" }}>\n            <Tooltip title={`HP: ${hp.remaining} / ${hp.max} - Temp: ${hp.temporary}`}>\n                <div className={cls.outer}>\n                    <div className={clsx(cls.inner, bg)}></div>\n                </div>\n            </Tooltip>\n            {show && (\n                <div\n                    style={{\n                        width: maxWidth,\n                        height: 15,\n                        position: \"absolute\",\n                        top: maxHeight + 3,\n                        left: 0,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Tooltip title=\"Apply Indicated Damage\">\n                        <MinusIcon onClick={updateHandler(\"REMOVE\")} className={clsx(cls.icon, cls.minus)} />\n                    </Tooltip>\n                    <Tooltip title=\"Amount to Adjust Health By\">\n                        <input\n                            type=\"number\"\n                            value={amount}\n                            onChange={(e) => {\n                                const value = Math.round(parseInt(e.target.value));\n                                if (value > 0) setAmount(value);\n                            }}\n                            className={cls.healthInput}\n                            min={1}\n                        />\n                    </Tooltip>\n                    <Tooltip title=\"Heal Indicated Ammount\">\n                        <AddIcon onClick={updateHandler(\"ADD\")} className={clsx(cls.icon, cls.plus)} />\n                    </Tooltip>\n                </div>\n            )}\n        </div>\n    );\n};\n\ninterface IStyleProps {\n    height: number;\n    width: number;\n    remaining: number;\n    color: IMaterialColor;\n}\nconst useStyles = makeStyles((theme) => ({\n    outer: {\n        width: (props: IStyleProps) => props.width,\n        height: (props: IStyleProps) => props.height,\n        background: theme.palette.grey[300],\n        borderRadius: (props: IStyleProps) => Math.round(props.height / 2),\n        position: \"relative\",\n    },\n    inner: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        background: red[300],\n        borderRadius: (props: IStyleProps) => Math.round(props.height / 2),\n        height: (props: IStyleProps) => props.height,\n        width: (props: IStyleProps) => props.remaining,\n        transition: \"all 275ms ease-in-out\",\n    },\n    healthy: {\n        background: green[\"A400\"],\n    },\n    injured: {\n        background: amber[\"A400\"],\n    },\n    bloodied: {\n        background: red[\"A400\"],\n    },\n    healthInput: {\n        width: 40,\n        border: \"none\",\n        background: \"transparent\",\n        color: (props: IStyleProps) => props.color[500],\n        fontSize: 14,\n        textAlign: \"center\",\n        \"&:focus\": {\n            outline: \"none\",\n        },\n    },\n    icon: {\n        fontSize: 25,\n        padding: 2,\n        \"&:hover\": {\n            cursor: \"pointer\",\n        },\n    },\n    minus: {\n        color: red[300],\n        marginRight: 13,\n        \"&:hover\": {\n            color: red[500],\n            transition: \"all 200ms ease-in-out\",\n        },\n    },\n    plus: {\n        color: green[300],\n        \"&:hover\": {\n            color: green[500],\n            transition: \"all 200ms ease-in-out\",\n        },\n    },\n}));\n","import React, { Dispatch } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ICombatant } from \"types/combatant\";\nimport { IMaterialColor } from \"types/material\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, DELETE_COMBATANT, UPDATE_REMAINING_HP } from \"store/combatant/types\";\nimport { UpdateInitForm } from \"./form-update-initiative\";\nimport { EditCombatantForm } from \"./form-edit-combatant\";\nimport { HealthBar } from \"components/health-bar\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport DeleteIcon from \"@material-ui/icons/DeleteRounded\";\nimport HeartIcon from \"@material-ui/icons/FavoriteRounded\";\nimport ShieldIcon from \"@material-ui/icons/SecurityRounded\";\nimport InitiativeIcon from \"@material-ui/icons/WatchLaterRounded\";\nimport EditIcon from \"@material-ui/icons/EditRounded\";\nimport SkullIcon from \"./skull.svg\";\nimport { red, green, blue, orange, yellow, grey } from \"@material-ui/core/colors\";\n\nexport interface ICombatantCardProps {\n    combatant: ICombatant;\n}\n\nexport const CombatantCard: React.FC<ICombatantCardProps> = ({ combatant }) => {\n    const typeColor = getBackgroundByType(combatant.type);\n    const cls = useStyles({ color: typeColor });\n    const { name, type, id, armorClass: ac, initiative } = combatant;\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n    const [openInitDialog, setOpenInitDialog] = React.useState(false);\n    const [openEditDialog, setOpenEditDialog] = React.useState(false);\n    const [showBadge, setShowBadge] = React.useState(false);\n\n    const isDead = combatant.hitPoints.remaining <= 0;\n\n    return (\n        <div className={clsx(cls.container, cls.wrapper)}>\n            {/* Combatant Name Display */}\n            <div className={cls.container}>\n                <Typography style={{ color: typeColor[500], fontWeight: 600, fontSize: 18 }} noWrap>\n                    {name || \"Rezkin\"}\n                </Typography>\n                <Tooltip title={type}>\n                    <Chip className={cls.typeChip} label={type === \"character\" ? \"PC\" : type} size=\"small\" />\n                </Tooltip>\n\n                <Tooltip title={`Armor Class: ${ac}`}>\n                    <Chip\n                        className={cls.typeChip}\n                        label={ac}\n                        size=\"small\"\n                        icon={<ShieldIcon className={cls.shieldIcon} />}\n                    />\n                </Tooltip>\n                <Tooltip title={`Initiative: ${initiative}`}>\n                    <Badge\n                        color=\"secondary\"\n                        badgeContent={\n                            combatant.initiativeModifier >= 0 ? (\n                                <strong>{`+${combatant.initiativeModifier}`}</strong>\n                            ) : (\n                                <strong>{`${combatant.initiativeModifier}`}</strong>\n                            )\n                        }\n                        invisible={!showBadge}\n                    >\n                        <div onMouseEnter={() => setShowBadge(true)} onMouseLeave={() => setShowBadge(false)}>\n                            <Chip\n                                className={cls.initChip}\n                                label={initiative}\n                                size=\"small\"\n                                onClick={() => setOpenInitDialog(true)}\n                                icon={<InitiativeIcon className={cls.initIcon} />}\n                                clickable\n                            />\n                        </div>\n                    </Badge>\n                </Tooltip>\n                <Tooltip title={\"Edit Combatant Details\"}>\n                    <EditIcon onClick={() => setOpenEditDialog(true)} className={clsx(cls.icon, cls.edit)} />\n                </Tooltip>\n                <Tooltip title={\"Delete Combatant\"}>\n                    <DeleteIcon\n                        onClick={() => dispatch({ type: DELETE_COMBATANT, id })}\n                        className={clsx(cls.icon, cls.delete)}\n                    />\n                </Tooltip>\n            </div>\n\n            {/* Spacing Between Elements */}\n            <div className={cls.spacer}></div>\n\n            {/* Combatant Health Meter */}\n            <div className={cls.container}>\n                {!isDead && <HeartIcon fontSize=\"small\" style={{ color: red[\"A400\"], marginRight: 2 }} />}\n                {isDead && <img src={SkullIcon} className={cls.deadIcon} alt=\"Skull Icon\" />}\n                <HealthBar combatant={combatant} color={typeColor} />\n                <input\n                    className={cls.healthInput}\n                    value={combatant.hitPoints.remaining}\n                    onChange={(e) => {\n                        const value = parseInt(e.target.value) || 0;\n\n                        if (value <= combatant.hitPoints.max)\n                            dispatch({\n                                type: UPDATE_REMAINING_HP,\n                                payload: {\n                                    id: combatant.id,\n                                    value,\n                                },\n                            });\n                    }}\n                    type=\"number\"\n                    min={0}\n                />\n            </div>\n\n            {/* Form Controls */}\n            <UpdateInitForm open={openInitDialog} onClose={() => setOpenInitDialog(false)} combatant={combatant} />\n            <EditCombatantForm open={openEditDialog} onClose={() => setOpenEditDialog(false)} combatant={combatant} />\n        </div>\n    );\n};\n\ninterface IStyleProps {\n    color: IMaterialColor;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        border: (props: IStyleProps) => `${props.color[400]} 2px solid`,\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(2),\n        borderRadius: 5,\n        width: \"100%\",\n        background: (props: IStyleProps) => props.color[50],\n        overflowX: \"auto\",\n        ...theme.scrollbar,\n    },\n    icon: {\n        padding: theme.spacing(0.1),\n        \"&:hover\": {\n            cursor: \"pointer\",\n        },\n    },\n    edit: {\n        color: grey[400],\n        marginLeft: 2,\n        \"&:hover\": {\n            color: grey[500],\n        },\n    },\n    delete: {\n        color: red[300],\n        \"&:hover\": {\n            color: red[500],\n        },\n    },\n    container: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    typeChip: {\n        color: theme.palette.common.white,\n        fontWeight: \"bold\",\n        marginLeft: theme.spacing(0.5),\n        background: (props: IStyleProps) => props.color[400],\n    },\n    shieldIcon: {\n        color: yellow[600],\n        fontWeight: \"bold\",\n    },\n    initChip: {\n        color: theme.palette.common.white,\n        fontWeight: \"bold\",\n        marginLeft: theme.spacing(0.5),\n        background: (props: IStyleProps) => props.color[400],\n        \"&:hover\": {\n            cursor: \"pointer\",\n            background: (props: IStyleProps) => props.color[600],\n            transition: \"all 200ms ease-in-out\",\n        },\n        \"&:focus\": {\n            background: (props: IStyleProps) => props.color[400],\n        },\n    },\n    initIcon: {\n        color: theme.palette.common.white,\n        fontWeight: \"bold\",\n    },\n    spacer: {\n        flexGrow: 1,\n    },\n    healthInput: {\n        width: 50,\n        border: \"none\",\n        background: \"transparent\",\n        color: (props: IStyleProps) => props.color[500],\n        fontSize: 18,\n        textAlign: \"center\",\n        \"&:focus\": {\n            outline: \"none\",\n        },\n    },\n    deadIcon: {\n        height: 21,\n        marginRight: 2,\n    },\n}));\n\n// @ts-ignore\nconst getBackgroundByType: (type: CombantantTypes) => IMaterialColor = (type) => {\n    switch (type) {\n        case \"character\":\n            return blue;\n        case \"hostile\":\n            return red;\n        case \"ally\":\n            return green;\n        case \"neutral\":\n            return orange;\n    }\n};\n","import React, { Dispatch } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, ROLL_INITIATIVE } from \"store/combatant/types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { RootState } from \"store\";\nimport { AddCombatantForm } from \"./form-add-combatant\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { CombatantCard } from \"./combatant-card\";\nimport SwordIcon from \"./swords.svg\";\nimport PersonIcon from \"@material-ui/icons/PersonRounded\";\nimport RollInitIcon from \"@material-ui/icons/PhotoFilter\";\n\nexport const InitiativeTracker: React.FC = () => {\n    const cls = useStyles();\n    const { combatants } = useSelector((state: RootState) => state.combantants);\n    const [openCombatantForm, setOpenCombatantForm] = React.useState(false);\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    return (\n        <div className={cls.wrapper}>\n            <div className={cls.container}>\n                <img src={SwordIcon} className={cls.headerIcon} alt=\"Sword Icon\" />\n                <Typography color=\"primary\" variant=\"h3\">\n                    Combat Tracker\n                </Typography>\n            </div>\n\n            <div style={{ margin: 8 }} className={cls.container}>\n                <Button\n                    style={{ margin: 2, color: \"white\", fontWeight: \"bold\" }}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    startIcon={<PersonIcon />}\n                    onClick={() => setOpenCombatantForm(true)}\n                >\n                    Combatant\n                </Button>\n                <Button\n                    style={{ margin: 2, color: \"white\", fontWeight: \"bold\" }}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    onClick={() => dispatch({ type: ROLL_INITIATIVE })}\n                    startIcon={<RollInitIcon />}\n                >\n                    Roll Initiative\n                </Button>\n            </div>\n\n            {/* Form Controls */}\n            <AddCombatantForm open={openCombatantForm} onClose={() => setOpenCombatantForm(false)} />\n\n            {/* Display Combatant List */}\n            <Flipper flipKey={combatants.map((c) => c.id).join(\" \")}>\n                <ul>\n                    {combatants\n                        .sort((a, b) => b.initiative - a.initiative)\n                        .map((c) => (\n                            <Flipped key={c.id} flipId={c.id}>\n                                <li style={{ listStyleType: \"none\" }}>\n                                    <CombatantCard combatant={c} />\n                                </li>\n                            </Flipped>\n                        ))}\n                </ul>\n            </Flipper>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n    },\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n    },\n    headerIcon: {\n        height: 40,\n        marginRight: theme.spacing(1),\n    },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { InitiativeTracker } from \"./initiative-tracker\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nexport const HomePage: React.FC = () => {\n    const cls = useStyles();\n\n    return (\n        <Grid container justify=\"center\" className={cls.root}>\n            <Grid item xs={12} sm={11} md={6} lg={5}>\n                <InitiativeTracker />\n            </Grid>\n        </Grid>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n        padding: theme.spacing(2),\n    },\n}));\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Switch, Route, Router, Redirect } from \"react-router-dom\";\nimport { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport ReactGA from \"react-ga\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nimport { HomePage } from \"./views/home\";\n\n// Define global style constants\nconst PRIMARY_COLOR = \"#4289b3\";\nconst SECONDARY_COLOR = \"#6153cc\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n    interface Theme {\n        scrollbar: {\n            boxSizing: React.CSSProperties[\"boxSizing\"];\n            overflow: React.CSSProperties[\"overflow\"];\n            \"&::-webkit-scrollbar-track\": {\n                background: React.CSSProperties[\"background\"];\n            };\n            \"&::-webkit-scrollbar\": {\n                width: React.CSSProperties[\"width\"];\n            };\n            \"&::-webkit-scrollbar-thumb\": {\n                borderRadius: React.CSSProperties[\"borderRadius\"];\n                background: React.CSSProperties[\"background\"];\n                height: React.CSSProperties[\"height\"];\n            };\n        };\n    }\n\n    // allow configuration using `createMuiTheme`\n    interface ThemeOptions {\n        scrollbar?: {\n            boxSizing?: React.CSSProperties[\"boxSizing\"];\n            overflow?: React.CSSProperties[\"overflow\"];\n            \"&::-webkit-scrollbar-track\"?: {\n                background: React.CSSProperties[\"background\"];\n            };\n            \"&::-webkit-scrollbar\"?: {\n                width: React.CSSProperties[\"width\"];\n            };\n            \"&::-webkit-scrollbar-thumb\"?: {\n                borderRadius: React.CSSProperties[\"borderRadius\"];\n                background: React.CSSProperties[\"background\"];\n                height: React.CSSProperties[\"height\"];\n            };\n        };\n    }\n}\n\n// Generate custom Material UI theme\nlet theme = createMuiTheme({\n    // Setup global color palette\n    palette: {\n        primary: {\n            main: PRIMARY_COLOR,\n        },\n        secondary: {\n            main: SECONDARY_COLOR,\n        },\n        error: {\n            main: red[600],\n        },\n    },\n    // Setup global scrollbar mixin\n    scrollbar: {\n        boxSizing: \"border-box\",\n        overflow: \"auto\",\n        \"&::-webkit-scrollbar-track\": {\n            background: \"transparent\",\n        },\n        \"&::-webkit-scrollbar\": {\n            width: \"6px\",\n        },\n        \"&::-webkit-scrollbar-thumb\": {\n            borderRadius: \"3px\",\n            background: \"#cacad0\",\n            height: \"20px\",\n        },\n    },\n    // Declare default overrides\n    overrides: {\n        // Custom tooltip\n        MuiTooltip: {\n            tooltip: {\n                backgroundColor: PRIMARY_COLOR,\n                fontWeight: \"bold\",\n            },\n            arrow: {\n                color: PRIMARY_COLOR,\n            },\n        },\n    },\n});\n\n// Enable Material UI Responsive Fonts\ntheme = responsiveFontSizes(theme);\n\n// Setup browser history API for\n//  usage with Google Analytics\nconst history = createBrowserHistory();\n\n// Initialize Google Analytics page view tracking\nhistory.listen((location) => {\n    ReactGA.set({ page: location.pathname }); // Update the user's current page\n    ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\n\n// Setup Google Analytics\nReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS as string);\n\n// Setup App\n// @ts-ignore\nexport const App: React.FC = () => {\n    return (\n        <React.Fragment>\n            {/* Setup CSS Baseline for Material UI */}\n            <CssBaseline />\n            {/* Redux Provider */}\n            <Provider store={store}>\n                {/* Provide Material UI Theme to App */}\n                <ThemeProvider theme={theme}>\n                    {/* Instantiate Primary Application Router */}\n                    <Router history={history}>\n                        <Switch>\n                            <Route exact path={\"/\"} component={HomePage} />\n                            <Redirect to=\"/\" />\n                        </Switch>\n                    </Router>\n                </ThemeProvider>\n            </Provider>\n        </React.Fragment>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/skull.246b879b.svg\";"],"sourceRoot":""}