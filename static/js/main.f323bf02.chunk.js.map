{"version":3,"sources":["views/home/initiative-tracker/combatant-card/skull.svg","views/home/initiative-tracker/swords.svg","store/combatant/reducer.ts","store/persist-helpers.ts","store/index.ts","store/combatant/types.ts","store/combatant/hooks.ts","views/home/initiative-tracker/form-add-combatant.tsx","views/home/initiative-tracker/combatant-card/form-update-initiative.tsx","views/home/initiative-tracker/combatant-card/form-edit-combatant.tsx","views/home/initiative-tracker/combatant-card/health-bar.tsx","views/home/initiative-tracker/combatant-card/index.tsx","views/home/initiative-tracker/index.tsx","views/home/index.tsx","App.tsx","index.tsx"],"names":["module","exports","initialState","combatants","rootReducer","combineReducers","combantants","state","action","ReactGA","event","category","type","payload","filter","c","id","map","deathSaves","hitPoints","remaining","success","failure","value","max","Math","round","initiative","combatant","floor","random","initiativeModifier","filtered","copied","length","uuid","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","devToolsEnhancer","subscribe","stringify","setItem","saveState","getState","useCombatantDispatcher","dispatch","useDispatch","AddCombatantForm","open","onClose","cls","useStyles","React","useState","name","setName","setType","hitpoints","setHp","ac","setAc","initMod","setInitMod","acVal","parseInt","initVal","hpVal","isNaN","hp","temporary","isValidName","isValidType","isValidHp","isValidAc","isValidInitMod","formValid","handleSubmit","armorClass","conditions","Dialog","maxWidth","DialogTitle","DialogContent","onSubmit","e","preventDefault","style","width","TextField","autoFocus","margin","label","fullWidth","onChange","target","required","className","formWrapper","inputProps","min","FormControl","InputLabel","Select","MenuItem","key","DialogActions","Button","color","variant","fontWeight","onClick","disabled","makeStyles","theme","display","flexWrap","breakpoints","down","UpdateInitForm","init","setInit","isValidInit","EditCombatantForm","HealthBar","height","showTools","amount","setAmount","isHealthy","isBloodied","isUnconcious","isInjured","maxHeight","healthPercentage","grey","bg","healthy","injured","bloodied","show","undefined","updateHandler","method","newVal","selectHandler","offset","saves","checked","position","marginBottom","flipKey","flipId","flexDirection","alignItems","GreenCheckbox","size","RedCheckBox","Tooltip","title","outer","clsx","inner","Fade","in","top","left","justifyContent","icon","minus","healthInput","plus","props","background","palette","borderRadius","red","transition","green","amber","border","fontSize","textAlign","outline","padding","cursor","marginRight","withStyles","root","Checkbox","checkedIcon","CombatantCard","typeColor","getBackgroundByType","openInitDialog","setOpenInitDialog","openEditDialog","setOpenEditDialog","showBadge","setShowBadge","isDead","container","wrapper","Typography","noWrap","Chip","typeChip","shieldIcon","Badge","badgeContent","invisible","onMouseEnter","onMouseLeave","initChip","initIcon","clickable","edit","copy","delete","healthWrapper","spring","src","SkullIcon","deadIcon","alt","spacing","overflowX","scrollbar","blueGrey","marginLeft","common","white","yellow","spacer","flexGrow","blue","orange","InitiativeTracker","useSelector","openCombatantForm","setOpenCombatantForm","sorted","sort","a","b","SwordIcon","headerIcon","marginTop","startIcon","join","listStyleType","HomePage","Grid","justify","item","sm","md","lg","xl","createMuiTheme","primary","main","secondary","error","boxSizing","overflow","overrides","MuiTooltip","tooltip","backgroundColor","arrow","responsiveFontSizes","history","createBrowserHistory","basename","process","listen","location","set","page","pathname","pageview","initialize","App","useEffect","window","Fragment","CssBaseline","ThemeProvider","exact","path","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f323bf02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skull.246b879b.svg\";","module.exports = __webpack_public_path__ + \"static/media/swords.19af7b51.svg\";","import { v4 as uuid } from \"uuid\";\nimport {\n    CombatantState,\n    CombantantActionTypes,\n    ADD_COMBATANT,\n    DELETE_COMBATANT,\n    UPDATE_REMAINING_HP,\n    UPDATE_INITIATIVE,\n    UPDATE_COMBATANT,\n    ROLL_INITIATIVE,\n    COPY_COMBATANT,\n    UPDATE_DEATH_SAVES,\n} from \"./types\";\nimport ReactGA from \"react-ga\";\nimport { IDeathSaves } from \"types/combatant\";\n\nconst initialState: CombatantState = {\n    combatants: [],\n};\n\nconst COMBATANT = \"COMBATANT\";\n\nexport function combatantReducer(state = initialState, action: CombantantActionTypes): CombatantState {\n    ReactGA.event({\n        category: COMBATANT,\n        action: action.type,\n    });\n\n    switch (action.type) {\n        case ADD_COMBATANT:\n            return {\n                combatants: [...state.combatants, action.payload],\n            };\n\n        case DELETE_COMBATANT:\n            return {\n                combatants: state.combatants.filter((c) => c.id !== action.payload),\n            };\n\n        case UPDATE_REMAINING_HP:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n\n                    const empty: IDeathSaves = { success: [false, false, false], failure: [false, false, false] };\n                    const deathSaves = c.hitPoints.remaining > 0 ? empty : c.deathSaves;\n\n                    return {\n                        ...c,\n                        deathSaves,\n                        hitPoints: {\n                            ...c.hitPoints,\n                            remaining:\n                                action.payload.value > 0\n                                    ? action.payload.value <= c.hitPoints.max\n                                        ? Math.round(action.payload.value)\n                                        : c.hitPoints.max\n                                    : 0,\n                        },\n                    };\n                }),\n            };\n\n        case UPDATE_INITIATIVE:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n                    return {\n                        ...c,\n                        initiative: action.payload.value,\n                    };\n                }),\n            };\n\n        case UPDATE_COMBATANT:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n                    return action.payload.combatant;\n                }),\n            };\n\n        case ROLL_INITIATIVE:\n            return {\n                combatants: state.combatants.map((c) => {\n                    return {\n                        ...c,\n                        initiative: Math.floor(Math.random() * 20) + 1 + c.initiativeModifier,\n                    };\n                }),\n            };\n\n        case COPY_COMBATANT:\n            const filtered = state.combatants.filter((c) => c.id === action.payload);\n            const copied = filtered.length === 1 ? filtered[0] : null;\n\n            if (copied)\n                return {\n                    combatants: [...state.combatants, { ...copied, id: uuid() }],\n                };\n            else return state;\n\n        case UPDATE_DEATH_SAVES:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n                    return {\n                        ...c,\n                        deathSaves: action.payload.deathSaves,\n                    };\n                }),\n            };\n\n        default:\n            return state;\n    }\n}\n","import { RootState } from \"./index\";\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem(\"state\");\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nexport const saveState = (state: RootState) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(\"state\", serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n","import { combineReducers, createStore, Store } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { combatantReducer } from \"./combatant/reducer\";\nimport { loadState, saveState } from \"./persist-helpers\";\n\nconst rootReducer = combineReducers({\n    combantants: combatantReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\n//@ts-ignore\nconst persistedState = loadState();\nexport const store: Store = createStore(rootReducer, persistedState, devToolsEnhancer({}));\n\n// Persist store to local storage\nstore.subscribe(() => {\n    saveState({\n        combantants: store.getState().combantants,\n    });\n});\n","import { ICombatant, IDeathSaves } from \"types/combatant\";\n\nexport interface CombatantState {\n    combatants: ICombatant[];\n}\n\nexport interface IUpdateValuePayload {\n    id: string;\n    value: number;\n}\n\nexport interface IUpdateCombatantPayload {\n    id: string;\n    combatant: ICombatant;\n}\n\nexport interface IUpdateDeathSavesPayload {\n    id: string;\n    deathSaves: IDeathSaves;\n}\n\nexport const ADD_COMBATANT = \"ADD_COMBATANT\";\nexport const DELETE_COMBATANT = \"DELETE_COMBATANT\";\nexport const UPDATE_COMBATANT = \"UPDATE_COMBATANT\";\nexport const COPY_COMBATANT = \"COPY_COMBATANT\";\nexport const UPDATE_REMAINING_HP = \"UPDATE_REMAINING_HP\";\nexport const UPDATE_INITIATIVE = \"UPDATE_INITIATIVE\";\nexport const UPDATE_DEATH_SAVES = \"UPDATE_DEATH_SAVES\";\nexport const ROLL_INITIATIVE = \"ROLL_INITIATIVE\";\n\ninterface IAddCombatantAction {\n    type: typeof ADD_COMBATANT;\n    payload: ICombatant;\n}\n\ninterface IDeleteCombatantAction {\n    type: typeof DELETE_COMBATANT;\n    payload: string;\n}\n\ninterface IUpdateRemainingHpAction {\n    type: typeof UPDATE_REMAINING_HP;\n    payload: IUpdateValuePayload;\n}\n\ninterface IUpdateInitiativeAction {\n    type: typeof UPDATE_INITIATIVE;\n    payload: IUpdateValuePayload;\n}\n\ninterface IUpdateCombatantAction {\n    type: typeof UPDATE_COMBATANT;\n    payload: IUpdateCombatantPayload;\n}\n\ninterface IRollInitiativeAction {\n    type: typeof ROLL_INITIATIVE;\n}\n\ninterface ICopyCombatantAction {\n    type: typeof COPY_COMBATANT;\n    payload: string;\n}\n\ninterface IUpdateDeathSavesAction {\n    type: typeof UPDATE_DEATH_SAVES;\n    payload: IUpdateDeathSavesPayload;\n}\n\nexport type CombantantActionTypes =\n    | IAddCombatantAction\n    | IDeleteCombatantAction\n    | IUpdateRemainingHpAction\n    | IUpdateInitiativeAction\n    | IUpdateCombatantAction\n    | IRollInitiativeAction\n    | ICopyCombatantAction\n    | IUpdateDeathSavesAction;\n","import { Dispatch } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"store\";\n\nimport { CombantantActionTypes } from \"./types\";\n\nexport const useCombatants = () => {\n    const { combatants } = useSelector((state: RootState) => state.combantants);\n\n    return combatants;\n};\n\nexport const useCombatantDispatcher = () => {\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    return (payload: CombantantActionTypes) => dispatch(payload);\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CombantantTypes } from \"types/combatant\";\nimport { useCombatantDispatcher } from \"store/combatant/hooks\";\nimport { ADD_COMBATANT } from \"store/combatant/types\";\nimport { v4 as uuid } from \"uuid\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport interface IAddCombatantFormProps {\n    open: boolean;\n    onClose: () => void;\n}\n\nexport const AddCombatantForm: React.FC<IAddCombatantFormProps> = ({ open, onClose }) => {\n    const cls = useStyles();\n    const [name, setName] = React.useState(\"Combatant\");\n    const [type, setType] = React.useState<CombantantTypes>(\"character\");\n    const [hitpoints, setHp] = React.useState<string>(\"10\");\n    const [ac, setAc] = React.useState(\"13\");\n    const [initMod, setInitMod] = React.useState(\"0\");\n    const dispatch = useCombatantDispatcher();\n\n    // Evaluate form validity\n    const acVal = parseInt(ac);\n    const initVal = parseInt(initMod);\n    const hpVal = isNaN(parseInt(hitpoints)) ? 0 : parseInt(hitpoints);\n    const hp = { max: hpVal, remaining: hpVal, temporary: 0 };\n    const isValidName = name.length >= 3;\n    const isValidType = type.length > 0;\n    const isValidHp = hp.max >= hp.remaining && hp.max > 0 && hp.remaining > 0 && hp.temporary >= 0;\n    const isValidAc = !isNaN(acVal) && acVal > 0;\n    const isValidInitMod = !isNaN(initVal) && initVal >= -10 && initVal <= 10;\n    const formValid = isValidName && isValidType && isValidHp && isValidAc && isValidInitMod;\n\n    const clearForm = () => {\n        setName(\"Combatant\");\n        setType(\"character\");\n        setHp(\"10\");\n        setAc(\"13\");\n        setInitMod(\"0\");\n    };\n\n    // Form submission handler\n    const handleSubmit = () => {\n        dispatch({\n            type: ADD_COMBATANT,\n            payload: {\n                id: uuid(),\n                armorClass: acVal,\n                conditions: [],\n                hitPoints: hp,\n                initiative: 10,\n                initiativeModifier: initVal,\n                name,\n                type,\n            },\n        });\n\n        clearForm();\n        onClose();\n    };\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (formValid) handleSubmit();\n    };\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setType(event.target.value as CombantantTypes);\n    };\n\n    const types: CombantantTypes[] = [\"character\", \"ally\", \"hostile\", \"neutral\"];\n\n    return (\n        <Dialog maxWidth=\"sm\" open={open} onClose={() => onClose()}>\n            <DialogTitle>Add Combatant</DialogTitle>\n\n            {/* Form content */}\n            <DialogContent>\n                <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n\n                    <div className={cls.formWrapper}>\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Armor Class\"\n                            type=\"number\"\n                            fullWidth\n                            value={ac}\n                            onChange={(e) => {\n                                setAc(e.target.value);\n                            }}\n                            inputProps={{ min: 0 }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"HP\"\n                            type=\"number\"\n                            fullWidth\n                            value={hitpoints}\n                            onChange={(e) => {\n                                setHp(e.target.value);\n                            }}\n                            inputProps={{ min: 0 }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Initiative Mod\"\n                            type=\"number\"\n                            fullWidth\n                            value={initMod}\n                            onChange={(e) => {\n                                setInitMod(e.target.value);\n                            }}\n                            inputProps={{ min: 0 }}\n                            required\n                        />\n                    </div>\n                    <FormControl fullWidth>\n                        <InputLabel>Combatant Type</InputLabel>\n                        <Select value={type} onChange={handleChange} style={{ width: \"100%\" }}>\n                            {types.map((type) => (\n                                <MenuItem key={type} value={type}>\n                                    {type}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={handleSubmit}\n                    disabled={!formValid}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    formWrapper: {\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        [theme.breakpoints.down(\"xs\")]: {\n            flexWrap: \"wrap\",\n        },\n    },\n}));\n","import React from \"react\";\nimport { ICombatant } from \"types/combatant\";\nimport { useCombatantDispatcher } from \"store/combatant/hooks\";\nimport { UPDATE_INITIATIVE } from \"store/combatant/types\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport interface IUpdateInitFormProps {\n    open: boolean;\n    onClose: () => void;\n    combatant: ICombatant;\n}\n\nexport const UpdateInitForm: React.FC<IUpdateInitFormProps> = ({ open, onClose, combatant }) => {\n    const [init, setInit] = React.useState(`${combatant.initiative}`);\n    const dispatch = useCombatantDispatcher();\n\n    // Evaluate form validity\n    const initVal = parseInt(init);\n    const isValidInit = !isNaN(initVal) && initVal > 0 && initVal <= 30;\n\n    // Form submission handler\n    const handleSubmit = () => {\n        dispatch({\n            type: UPDATE_INITIATIVE,\n            payload: {\n                id: combatant.id,\n                value: initVal,\n            },\n        });\n\n        onClose();\n    };\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (isValidInit) handleSubmit();\n    };\n\n    return (\n        <Dialog maxWidth=\"sm\" open={open} onClose={() => onClose()}>\n            <DialogTitle>Update Initiative</DialogTitle>\n\n            {/* Form content */}\n            <DialogContent>\n                <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Initiative\"\n                        type=\"number\"\n                        fullWidth\n                        value={init}\n                        onChange={(e) => setInit(e.target.value)}\n                        required\n                        inputProps={{ min: 0 }}\n                    />\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={handleSubmit}\n                    disabled={!isValidInit}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CombantantTypes, ICombatant } from \"types/combatant\";\nimport { useCombatantDispatcher } from \"store/combatant/hooks\";\nimport { UPDATE_COMBATANT } from \"store/combatant/types\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport interface IEditCombatantFormProps {\n    open: boolean;\n    onClose: () => void;\n    combatant: ICombatant;\n}\n\nexport const EditCombatantForm: React.FC<IEditCombatantFormProps> = ({ open, onClose, combatant }) => {\n    const cls = useStyles();\n    const [name, setName] = React.useState(combatant.name);\n    const [type, setType] = React.useState<CombantantTypes>(combatant.type);\n    const [hitpoints, setHp] = React.useState<string>(`${combatant.hitPoints.max}`);\n    const [ac, setAc] = React.useState(`${combatant.armorClass}`);\n    const [initMod, setInitMod] = React.useState(`${combatant.initiativeModifier}`);\n    const dispatch = useCombatantDispatcher();\n\n    // Evaluate form validity\n    const acVal = parseInt(ac);\n    const initVal = parseInt(initMod);\n    const hpVal = isNaN(parseInt(hitpoints)) ? 0 : parseInt(hitpoints);\n    const hp = { max: hpVal, remaining: hpVal, temporary: 0 };\n    const isValidName = name.length >= 3;\n    const isValidType = type.length > 0;\n    const isValidHp = hp.max >= hp.remaining && hp.max > 0 && hp.remaining > 0 && hp.temporary >= 0;\n    const isValidAc = !isNaN(acVal) && acVal > 0;\n    const isValidInitMod = !isNaN(initVal) && initVal >= -10 && initVal <= 10;\n    const formValid = isValidName && isValidType && isValidHp && isValidAc && isValidInitMod;\n\n    // Form submission handler\n    const handleSubmit = () => {\n        dispatch({\n            type: UPDATE_COMBATANT,\n            payload: {\n                id: combatant.id,\n                combatant: {\n                    id: combatant.id,\n                    armorClass: acVal,\n                    conditions: combatant.conditions,\n                    hitPoints: hp,\n                    initiative: combatant.initiative,\n                    initiativeModifier: initVal,\n                    name,\n                    type,\n                },\n            },\n        });\n\n        onClose();\n    };\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (formValid) handleSubmit();\n    };\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setType(event.target.value as CombantantTypes);\n    };\n\n    const types: CombantantTypes[] = [\"character\", \"ally\", \"hostile\", \"neutral\"];\n\n    return (\n        <Dialog maxWidth=\"sm\" open={open} onClose={() => onClose()}>\n            <DialogTitle>Edit Combatant</DialogTitle>\n\n            {/* Form content */}\n            <DialogContent>\n                <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n\n                    <div className={cls.formWrapper}>\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Armor Class\"\n                            type=\"number\"\n                            fullWidth\n                            value={ac}\n                            onChange={(e) => {\n                                setAc(e.target.value);\n                            }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"HP\"\n                            type=\"number\"\n                            fullWidth\n                            value={hitpoints}\n                            onChange={(e) => {\n                                setHp(e.target.value);\n                            }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Initiative Mod\"\n                            type=\"number\"\n                            fullWidth\n                            value={initMod}\n                            onChange={(e) => {\n                                setInitMod(e.target.value);\n                            }}\n                            required\n                        />\n                    </div>\n                    <FormControl fullWidth>\n                        <InputLabel>Combatant Type</InputLabel>\n                        <Select value={type} onChange={handleChange} style={{ width: \"100%\" }}>\n                            {types.map((type) => (\n                                <MenuItem key={type} value={type}>\n                                    {type}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={handleSubmit}\n                    disabled={!formValid}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    formWrapper: {\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        [theme.breakpoints.down(\"xs\")]: {\n            flexWrap: \"wrap\",\n        },\n    },\n}));\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { ICombatant } from \"types/combatant\";\nimport { IMaterialColor } from \"types/material\";\nimport { useCombatantDispatcher } from \"store/combatant/hooks\";\nimport { UPDATE_REMAINING_HP, UPDATE_DEATH_SAVES } from \"store/combatant/types\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/AddRounded\";\nimport MinusIcon from \"@material-ui/icons/RemoveRounded\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Checkbox, { CheckboxProps } from \"@material-ui/core/Checkbox\";\n\nimport DeathIcon from \"@material-ui/icons/IndeterminateCheckBoxRounded\";\nimport { red, green, amber, grey } from \"@material-ui/core/colors\";\n\nexport interface IHealthBarProps {\n    combatant: ICombatant;\n    color?: IMaterialColor;\n    height?: number;\n    width?: number;\n    showTools?: boolean;\n}\n\nexport const HealthBar: React.FC<IHealthBarProps> = ({ combatant, height, width, showTools, color }) => {\n    const [amount, setAmount] = React.useState<string>(\"5\");\n    const dispatch = useCombatantDispatcher();\n\n    const { hitPoints: hp } = combatant;\n    const isHealthy = hp.remaining >= hp.max * 0.666;\n    const isBloodied = hp.remaining <= hp.max * 0.3333;\n    const isUnconcious = hp.remaining <= 0;\n    const isInjured = !isHealthy && !isBloodied && !isUnconcious;\n\n    const maxWidth = width || 100;\n    const maxHeight = height || 10;\n    const healthPercentage = Math.round((hp.remaining / hp.max) * maxWidth);\n    const cls = useStyles({ height: maxHeight, width: maxWidth, remaining: healthPercentage, color: color || grey });\n\n    const bg = isHealthy ? cls.healthy : isInjured ? cls.injured : isBloodied ? cls.bloodied : null;\n    const s = showTools !== undefined ? showTools : true;\n    const show = isUnconcious ? false : s;\n    const deathSaves = combatant.deathSaves || { success: [false, false, false], failure: [false, false, false] };\n\n    const updateHandler = (method: \"ADD\" | \"REMOVE\") => () => {\n        const newVal = parseInt(amount);\n\n        if (newVal && newVal >= 1) {\n            dispatch({\n                type: UPDATE_REMAINING_HP,\n                payload: {\n                    id: combatant.id,\n                    value: method === \"ADD\" ? hp.remaining + newVal : hp.remaining - newVal,\n                },\n            });\n        }\n\n        setAmount(\"5\");\n    };\n\n    const selectHandler = (type: \"success\" | \"failure\", offset: 0 | 1 | 2) => (\n        e: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const saves = combatant.deathSaves || { success: [false, false, false], failure: [false, false, false] };\n        saves[type][offset] = e.target.checked;\n\n        dispatch({\n            type: UPDATE_DEATH_SAVES,\n            payload: {\n                id: combatant.id,\n                deathSaves: saves,\n            },\n        });\n    };\n\n    return (\n        <div style={{ position: \"relative\", marginBottom: isUnconcious ? 0 : 10 }}>\n            <Flipper flipKey={isUnconcious}>\n                {isUnconcious ? (\n                    <Flipped flipId=\"dead\">\n                        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <GreenCheckbox\n                                    checked={deathSaves.success[0]}\n                                    style={{ height: 8, width: 12 }}\n                                    onChange={selectHandler(\"success\", 0)}\n                                    size=\"small\"\n                                />\n                                <GreenCheckbox\n                                    checked={deathSaves.success[1]}\n                                    style={{ height: 8, width: 12 }}\n                                    onChange={selectHandler(\"success\", 1)}\n                                    size=\"small\"\n                                />\n                                <GreenCheckbox\n                                    checked={deathSaves.success[2]}\n                                    style={{ height: 8, width: 12 }}\n                                    onChange={selectHandler(\"success\", 2)}\n                                    size=\"small\"\n                                />\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <RedCheckBox\n                                    checked={deathSaves.failure[0]}\n                                    style={{ height: 8, width: 12 }}\n                                    onChange={selectHandler(\"failure\", 0)}\n                                    size=\"small\"\n                                />\n                                <RedCheckBox\n                                    checked={deathSaves.failure[1]}\n                                    style={{ height: 8, width: 12 }}\n                                    onChange={selectHandler(\"failure\", 1)}\n                                    size=\"small\"\n                                />\n                                <RedCheckBox\n                                    checked={deathSaves.failure[2]}\n                                    style={{ height: 8, width: 12 }}\n                                    onChange={selectHandler(\"failure\", 2)}\n                                    size=\"small\"\n                                />\n                            </div>\n                        </div>\n                    </Flipped>\n                ) : (\n                    <Flipped flipId=\"dead\">\n                        <Tooltip title={`HP: ${hp.remaining} / ${hp.max} - Temp: ${hp.temporary}`}>\n                            <div className={cls.outer}>\n                                <div className={clsx(cls.inner, bg)}></div>\n                            </div>\n                        </Tooltip>\n                    </Flipped>\n                )}\n            </Flipper>\n\n            {show && (\n                <Fade in={show}>\n                    <div\n                        style={{\n                            width: maxWidth,\n                            height: 15,\n                            position: \"absolute\",\n                            top: maxHeight + 3,\n                            left: 0,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Tooltip title=\"Apply Indicated Damage\">\n                            <MinusIcon onClick={updateHandler(\"REMOVE\")} className={clsx(cls.icon, cls.minus)} />\n                        </Tooltip>\n                        <Tooltip title=\"Amount to Adjust Health By\">\n                            <input\n                                type=\"number\"\n                                value={amount}\n                                onChange={(e) => {\n                                    setAmount(e.target.value);\n                                }}\n                                className={cls.healthInput}\n                                min={1}\n                            />\n                        </Tooltip>\n                        <Tooltip title=\"Heal Indicated Ammount\">\n                            <AddIcon onClick={updateHandler(\"ADD\")} className={clsx(cls.icon, cls.plus)} />\n                        </Tooltip>\n                    </div>\n                </Fade>\n            )}\n        </div>\n    );\n};\n\ninterface IStyleProps {\n    height: number;\n    width: number;\n    remaining: number;\n    color: IMaterialColor;\n}\nconst useStyles = makeStyles((theme) => ({\n    outer: {\n        width: (props: IStyleProps) => props.width,\n        height: (props: IStyleProps) => props.height,\n        background: theme.palette.grey[300],\n        borderRadius: (props: IStyleProps) => Math.round(props.height / 2),\n        position: \"relative\",\n    },\n    inner: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        background: red[300],\n        borderRadius: (props: IStyleProps) => Math.round(props.height / 2),\n        height: (props: IStyleProps) => props.height,\n        width: (props: IStyleProps) => props.remaining,\n        transition: \"all 275ms ease-in-out\",\n    },\n    healthy: {\n        background: green[\"A400\"],\n    },\n    injured: {\n        background: amber[\"A400\"],\n    },\n    bloodied: {\n        background: red[\"A400\"],\n    },\n    healthInput: {\n        width: 40,\n        border: \"none\",\n        background: \"transparent\",\n        color: (props: IStyleProps) => props.color[500],\n        fontSize: 14,\n        textAlign: \"center\",\n        \"&:focus\": {\n            outline: \"none\",\n        },\n    },\n    icon: {\n        fontSize: 25,\n        padding: 2,\n        \"&:hover\": {\n            cursor: \"pointer\",\n        },\n    },\n    minus: {\n        color: red[300],\n        marginRight: 13,\n        \"&:hover\": {\n            color: red[500],\n            transition: \"all 200ms ease-in-out\",\n        },\n    },\n    plus: {\n        color: green[300],\n        \"&:hover\": {\n            color: green[500],\n            transition: \"all 200ms ease-in-out\",\n        },\n    },\n}));\n\nconst GreenCheckbox = withStyles({\n    root: {\n        color: green[400],\n        \"&$checked\": {\n            color: green[600],\n        },\n    },\n    checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nconst RedCheckBox = withStyles({\n    root: {\n        color: red[400],\n        \"&$checked\": {\n            color: red[600],\n        },\n    },\n    checked: {},\n})((props: CheckboxProps) => <Checkbox checkedIcon={<DeathIcon />} color=\"default\" {...props} />);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ICombatant } from \"types/combatant\";\nimport { IMaterialColor } from \"types/material\";\nimport { useCombatantDispatcher } from \"store/combatant/hooks\";\nimport { DELETE_COMBATANT, UPDATE_REMAINING_HP, COPY_COMBATANT } from \"store/combatant/types\";\nimport { UpdateInitForm } from \"./form-update-initiative\";\nimport { EditCombatantForm } from \"./form-edit-combatant\";\nimport { HealthBar } from \"./health-bar\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport DeleteIcon from \"@material-ui/icons/DeleteRounded\";\nimport HeartIcon from \"@material-ui/icons/FavoriteRounded\";\nimport ShieldIcon from \"@material-ui/icons/SecurityRounded\";\nimport InitiativeIcon from \"@material-ui/icons/WatchLaterRounded\";\nimport EditIcon from \"@material-ui/icons/EditRounded\";\nimport CopyIcon from \"@material-ui/icons/FileCopyRounded\";\nimport SkullIcon from \"./skull.svg\";\nimport { red, green, blue, orange, yellow, blueGrey } from \"@material-ui/core/colors\";\n\nexport interface ICombatantCardProps {\n    combatant: ICombatant;\n}\n\nexport const CombatantCard: React.FC<ICombatantCardProps> = ({ combatant }) => {\n    const typeColor = getBackgroundByType(combatant.type);\n    const cls = useStyles({ color: typeColor });\n    const { name, type, id, armorClass: ac, initiative } = combatant;\n    const dispatch = useCombatantDispatcher();\n    const [openInitDialog, setOpenInitDialog] = React.useState(false);\n    const [openEditDialog, setOpenEditDialog] = React.useState(false);\n    const [showBadge, setShowBadge] = React.useState(false);\n\n    const isDead = combatant.hitPoints.remaining <= 0;\n\n    return (\n        <div className={clsx(cls.container, cls.wrapper)}>\n            {/* Combatant Name Display */}\n            <div className={clsx(cls.container)}>\n                <Typography style={{ color: typeColor[500], fontWeight: 600, fontSize: 18 }} noWrap>\n                    {name || \"Rezkin\"}\n                </Typography>\n                <Tooltip title={type}>\n                    <Chip className={cls.typeChip} label={type === \"character\" ? \"PC\" : type} size=\"small\" />\n                </Tooltip>\n\n                <Tooltip title={`Armor Class: ${ac}`}>\n                    <Chip\n                        className={cls.typeChip}\n                        label={ac}\n                        size=\"small\"\n                        icon={<ShieldIcon className={cls.shieldIcon} />}\n                    />\n                </Tooltip>\n                <Tooltip title={`Initiative: ${initiative}`}>\n                    <Badge\n                        color=\"secondary\"\n                        badgeContent={\n                            combatant.initiativeModifier >= 0 ? (\n                                <strong>{`+${combatant.initiativeModifier}`}</strong>\n                            ) : (\n                                <strong>{`${combatant.initiativeModifier}`}</strong>\n                            )\n                        }\n                        invisible={!showBadge}\n                    >\n                        <div onMouseEnter={() => setShowBadge(true)} onMouseLeave={() => setShowBadge(false)}>\n                            <Chip\n                                className={cls.initChip}\n                                label={initiative}\n                                size=\"small\"\n                                onClick={() => setOpenInitDialog(true)}\n                                icon={<InitiativeIcon className={cls.initIcon} />}\n                                clickable\n                            />\n                        </div>\n                    </Badge>\n                </Tooltip>\n                <Tooltip title={\"Edit Combatant Details\"}>\n                    <EditIcon onClick={() => setOpenEditDialog(true)} className={clsx(cls.icon, cls.edit)} />\n                </Tooltip>\n                <Tooltip title={\"Copy Combatant\"}>\n                    <CopyIcon\n                        onClick={() => dispatch({ type: COPY_COMBATANT, payload: id })}\n                        className={clsx(cls.icon, cls.copy)}\n                    />\n                </Tooltip>\n                <Tooltip title={\"Delete Combatant\"}>\n                    <DeleteIcon\n                        onClick={() => dispatch({ type: DELETE_COMBATANT, payload: id })}\n                        className={clsx(cls.icon, cls.delete)}\n                    />\n                </Tooltip>\n            </div>\n\n            {/* Combatant Health Meter */}\n            <div className={clsx(cls.container, cls.healthWrapper)}>\n                <Flipper flipKey={isDead} spring=\"gentle\">\n                    {isDead ? (\n                        <Flipped flipId=\"icon\">\n                            <div>\n                                <img src={SkullIcon} className={cls.deadIcon} alt=\"Skull Icon\" />\n                            </div>\n                        </Flipped>\n                    ) : (\n                        <Flipped flipId=\"icon\">\n                            <HeartIcon fontSize=\"small\" style={{ color: red[\"A400\"], marginRight: 2 }} />\n                        </Flipped>\n                    )}\n                </Flipper>\n\n                <HealthBar combatant={combatant} color={typeColor} />\n                <input\n                    className={cls.healthInput}\n                    value={combatant.hitPoints.remaining}\n                    onChange={(e) => {\n                        const value = parseInt(e.target.value) || 0;\n\n                        if (value <= combatant.hitPoints.max)\n                            dispatch({\n                                type: UPDATE_REMAINING_HP,\n                                payload: {\n                                    id: combatant.id,\n                                    value,\n                                },\n                            });\n                    }}\n                    type=\"number\"\n                    min={0}\n                />\n            </div>\n\n            {/* Form Controls */}\n            <UpdateInitForm open={openInitDialog} onClose={() => setOpenInitDialog(false)} combatant={combatant} />\n            <EditCombatantForm open={openEditDialog} onClose={() => setOpenEditDialog(false)} combatant={combatant} />\n        </div>\n    );\n};\n\ninterface IStyleProps {\n    color: IMaterialColor;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        border: (props: IStyleProps) => `${props.color[400]} 2px solid`,\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(1.2),\n        borderRadius: 5,\n        width: \"100%\",\n        background: (props: IStyleProps) => props.color[50],\n        overflowX: \"auto\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        height: \"auto\",\n        [theme.breakpoints.down(\"xs\")]: {\n            justifyContent: \"center\",\n        },\n        ...theme.scrollbar,\n    },\n    healthWrapper: {\n        [theme.breakpoints.down(\"xs\")]: {\n            margin: theme.spacing(0.5),\n        },\n    },\n    icon: {\n        padding: theme.spacing(0.1),\n        \"&:hover\": {\n            cursor: \"pointer\",\n        },\n    },\n    edit: {\n        color: blueGrey[300],\n        marginLeft: 2,\n        \"&:hover\": {\n            color: blueGrey[400],\n        },\n    },\n    copy: {\n        color: blueGrey[200],\n        \"&:hover\": {\n            color: blueGrey[300],\n        },\n    },\n    delete: {\n        color: red[300],\n        \"&:hover\": {\n            color: red[500],\n        },\n    },\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    typeChip: {\n        color: theme.palette.common.white,\n        fontWeight: \"bold\",\n        marginLeft: theme.spacing(0.5),\n        background: (props: IStyleProps) => props.color[400],\n    },\n    shieldIcon: {\n        color: yellow[600],\n        fontWeight: \"bold\",\n    },\n    initChip: {\n        color: theme.palette.common.white,\n        fontWeight: \"bold\",\n        marginLeft: theme.spacing(0.5),\n        background: (props: IStyleProps) => props.color[400],\n        \"&:hover\": {\n            cursor: \"pointer\",\n            background: (props: IStyleProps) => props.color[600],\n            transition: \"all 200ms ease-in-out\",\n        },\n        \"&:focus\": {\n            background: (props: IStyleProps) => props.color[400],\n        },\n    },\n    initIcon: {\n        color: theme.palette.common.white,\n        fontWeight: \"bold\",\n    },\n    spacer: {\n        flexGrow: 1,\n    },\n    healthInput: {\n        width: 50,\n        border: \"none\",\n        background: \"transparent\",\n        color: (props: IStyleProps) => props.color[500],\n        fontSize: 18,\n        textAlign: \"center\",\n        \"&:focus\": {\n            outline: \"none\",\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            fontSize: 15,\n        },\n    },\n    deadIcon: {\n        height: 21,\n        width: 21,\n        marginRight: 2,\n    },\n}));\n\n// @ts-ignore\nconst getBackgroundByType: (type: CombantantTypes) => IMaterialColor = (type) => {\n    switch (type) {\n        case \"character\":\n            return blue;\n        case \"hostile\":\n            return red;\n        case \"ally\":\n            return green;\n        case \"neutral\":\n            return orange;\n    }\n};\n","import React from \"react\";\nimport { ROLL_INITIATIVE } from \"store/combatant/types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddCombatantForm } from \"./form-add-combatant\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\nimport { useCombatants, useCombatantDispatcher } from \"store/combatant/hooks\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { CombatantCard } from \"./combatant-card\";\nimport SwordIcon from \"./swords.svg\";\nimport PersonIcon from \"@material-ui/icons/PersonRounded\";\nimport RollInitIcon from \"@material-ui/icons/PhotoFilter\";\n\nexport const InitiativeTracker: React.FC = () => {\n    const cls = useStyles();\n    const combatants = useCombatants();\n    const [openCombatantForm, setOpenCombatantForm] = React.useState(false);\n    const dispatch = useCombatantDispatcher();\n\n    const sorted = combatants.sort((a, b) => b.initiative - a.initiative);\n\n    return (\n        <div className={cls.wrapper}>\n            <div className={cls.container}>\n                <img src={SwordIcon} className={cls.headerIcon} alt=\"Sword Icon\" />\n                <Typography color=\"primary\" variant=\"h3\">\n                    Combat Tracker\n                </Typography>\n            </div>\n\n            <div style={{ marginTop: 4, marginBottom: 4 }} className={cls.container}>\n                <Button\n                    style={{ marginRight: 2, color: \"white\", fontWeight: \"bold\" }}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    startIcon={<PersonIcon />}\n                    onClick={() => setOpenCombatantForm(true)}\n                    size=\"small\"\n                >\n                    Combatant\n                </Button>\n                <Button\n                    style={{ margin: 2, color: \"white\", fontWeight: \"bold\" }}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    onClick={() => dispatch({ type: ROLL_INITIATIVE })}\n                    startIcon={<RollInitIcon />}\n                    size=\"small\"\n                >\n                    Roll Initiative\n                </Button>\n            </div>\n\n            {/* Form Controls */}\n            <AddCombatantForm open={openCombatantForm} onClose={() => setOpenCombatantForm(false)} />\n\n            {/* Display Combatant List */}\n            <Flipper flipKey={sorted.map((c) => c.id).join(\" \")}>\n                <ul style={{ padding: 0, listStyleType: \"none\", margin: 0 }}>\n                    {sorted.map((c) => (\n                        <Flipped key={c.id} flipId={c.id}>\n                            <li style={{ listStyleType: \"none\" }}>\n                                <CombatantCard combatant={c} />\n                            </li>\n                        </Flipped>\n                    ))}\n                </ul>\n            </Flipper>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        margin: 0,\n        padding: 0,\n    },\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n    },\n    headerIcon: {\n        height: 40,\n        marginRight: theme.spacing(1),\n        [theme.breakpoints.down(\"xs\")]: {\n            height: 25,\n        },\n    },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { InitiativeTracker } from \"./initiative-tracker\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nexport const HomePage: React.FC = () => {\n    const cls = useStyles();\n\n    return (\n        <Grid container justify=\"center\" className={cls.root}>\n            <Grid item sm={12} md={8} lg={7} xl={6}>\n                <InitiativeTracker />\n            </Grid>\n        </Grid>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n        padding: theme.spacing(2),\n    },\n}));\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Switch, Route, Router, Redirect } from \"react-router-dom\";\nimport { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport ReactGA from \"react-ga\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nimport { HomePage } from \"./views/home\";\n\n// Define global style constants\nconst PRIMARY_COLOR = \"#4289b3\";\nconst SECONDARY_COLOR = \"#6153cc\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n    interface Theme {\n        scrollbar: {\n            boxSizing: React.CSSProperties[\"boxSizing\"];\n            overflow: React.CSSProperties[\"overflow\"];\n            \"&::-webkit-scrollbar-track\": {\n                background: React.CSSProperties[\"background\"];\n            };\n            \"&::-webkit-scrollbar\": {\n                width: React.CSSProperties[\"width\"];\n            };\n            \"&::-webkit-scrollbar-thumb\": {\n                borderRadius: React.CSSProperties[\"borderRadius\"];\n                background: React.CSSProperties[\"background\"];\n                height: React.CSSProperties[\"height\"];\n            };\n        };\n    }\n\n    // allow configuration using `createMuiTheme`\n    interface ThemeOptions {\n        scrollbar?: {\n            boxSizing?: React.CSSProperties[\"boxSizing\"];\n            overflow?: React.CSSProperties[\"overflow\"];\n            \"&::-webkit-scrollbar-track\"?: {\n                background: React.CSSProperties[\"background\"];\n            };\n            \"&::-webkit-scrollbar\"?: {\n                width: React.CSSProperties[\"width\"];\n            };\n            \"&::-webkit-scrollbar-thumb\"?: {\n                borderRadius: React.CSSProperties[\"borderRadius\"];\n                background: React.CSSProperties[\"background\"];\n                height: React.CSSProperties[\"height\"];\n            };\n        };\n    }\n}\n\n// Generate custom Material UI theme\nlet theme = createMuiTheme({\n    // Setup global color palette\n    palette: {\n        primary: {\n            main: PRIMARY_COLOR,\n        },\n        secondary: {\n            main: SECONDARY_COLOR,\n        },\n        error: {\n            main: red[600],\n        },\n    },\n    // Setup global scrollbar mixin\n    scrollbar: {\n        boxSizing: \"border-box\",\n        overflow: \"auto\",\n        \"&::-webkit-scrollbar-track\": {\n            background: \"transparent\",\n        },\n        \"&::-webkit-scrollbar\": {\n            width: \"6px\",\n        },\n        \"&::-webkit-scrollbar-thumb\": {\n            borderRadius: \"3px\",\n            background: \"#cacad0\",\n            height: \"20px\",\n        },\n    },\n    // Declare default overrides\n    overrides: {\n        // Custom tooltip\n        MuiTooltip: {\n            tooltip: {\n                backgroundColor: PRIMARY_COLOR,\n                fontWeight: \"bold\",\n            },\n            arrow: {\n                color: PRIMARY_COLOR,\n            },\n        },\n    },\n});\n\n// Enable Material UI Responsive Fonts\ntheme = responsiveFontSizes(theme);\n\n// Setup browser history API for\n//  usage with Google Analytics\nconst history = createBrowserHistory({ basename: process.env.REACT_APP_BASENAME as string });\n\n// Initialize Google Analytics page view tracking\nhistory.listen((location) => {\n    ReactGA.set({ page: location.pathname }); // Update the user's current page\n    ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\n\n// Setup Google Analytics\nReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS as string);\n\n// Setup App\n// @ts-ignore\nexport const App: React.FC = () => {\n    React.useEffect(() => {\n        ReactGA.pageview(window.location.pathname);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {/* Setup CSS Baseline for Material UI */}\n            <CssBaseline />\n            {/* Redux Provider */}\n            <Provider store={store}>\n                {/* Provide Material UI Theme to App */}\n                <ThemeProvider theme={theme}>\n                    {/* Instantiate Primary Application Router */}\n                    <Router history={history}>\n                        <Switch>\n                            <Route exact path={\"/\"} component={HomePage} />\n                            <Redirect to=\"/\" />\n                        </Switch>\n                    </Router>\n                </ThemeProvider>\n            </Provider>\n        </React.Fragment>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}