{"version":3,"sources":["views/home/initiative-tracker/swords.svg","store/combatant/reducer.ts","store/persist-helpers.ts","store/index.ts","store/combatant/types.ts","views/home/initiative-tracker/form-add-combatant.tsx","views/home/initiative-tracker/form-update-initiative.tsx","views/home/initiative-tracker/form-edit-combatant.tsx","components/health-bar.tsx","views/home/initiative-tracker/combatant-card.tsx","views/home/initiative-tracker/index.tsx","views/home/index.tsx","App.tsx","index.tsx","views/home/initiative-tracker/skull.svg"],"names":["module","exports","initialState","combatants","rootReducer","combineReducers","combantants","state","action","type","payload","filter","c","id","map","hitPoints","remaining","value","max","Math","round","initiative","combatant","floor","random","initiativeModifier","filtered","copied","length","uuid","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","devToolsEnhancer","subscribe","stringify","setItem","saveState","getState","AddCombatantForm","open","onClose","cls","useStyles","React","useState","name","setName","setType","hitpoints","setHp","ac","setAc","initMod","setInitMod","dispatch","useDispatch","acVal","parseInt","initVal","hpVal","isNaN","hp","temporary","isValidName","isValidType","isValidHp","isValidAc","isValidInitMod","formValid","handleSubmit","armorClass","conditions","Dialog","maxWidth","DialogTitle","DialogContent","onSubmit","e","preventDefault","style","width","TextField","autoFocus","margin","label","fullWidth","onChange","target","required","className","formWrapper","inputProps","min","FormControl","InputLabel","Select","event","MenuItem","key","DialogActions","Button","color","variant","fontWeight","onClick","disabled","makeStyles","theme","display","flexWrap","breakpoints","down","UpdateInitForm","init","setInit","isValidInit","EditCombatantForm","HealthBar","height","showTools","amount","setAmount","isHealthy","isBloodied","isInjured","maxHeight","healthPercentage","grey","bg","healthy","injured","bloodied","show","undefined","updateHandler","method","newVal","position","Tooltip","title","outer","clsx","inner","top","left","alignItems","justifyContent","icon","minus","healthInput","plus","props","background","palette","borderRadius","red","transition","green","amber","border","fontSize","textAlign","outline","padding","cursor","marginRight","CombatantCard","typeColor","getBackgroundByType","openInitDialog","setOpenInitDialog","openEditDialog","setOpenEditDialog","showBadge","setShowBadge","isDead","container","wrapper","Typography","noWrap","Chip","typeChip","size","shieldIcon","Badge","badgeContent","invisible","onMouseEnter","onMouseLeave","initChip","initIcon","clickable","edit","copy","delete","healthWrapper","src","SkullIcon","deadIcon","alt","spacing","overflowX","scrollbar","blueGrey","marginLeft","common","white","yellow","spacer","flexGrow","blue","orange","InitiativeTracker","useSelector","openCombatantForm","setOpenCombatantForm","sorted","sort","a","b","SwordIcon","headerIcon","marginTop","marginBottom","startIcon","flipKey","join","listStyleType","flipId","flexDirection","HomePage","Grid","justify","root","item","sm","md","lg","xl","createMuiTheme","primary","main","secondary","error","boxSizing","overflow","overrides","MuiTooltip","tooltip","backgroundColor","arrow","responsiveFontSizes","history","createBrowserHistory","basename","process","listen","location","ReactGA","set","page","pathname","pageview","initialize","App","useEffect","window","Fragment","CssBaseline","ThemeProvider","exact","path","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4509e63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/swords.19af7b51.svg\";","import { v4 as uuid } from \"uuid\";\nimport {\n    CombatantState,\n    CombantantActionTypes,\n    ADD_COMBATANT,\n    DELETE_COMBATANT,\n    UPDATE_REMAINING_HP,\n    UPDATE_INITIATIVE,\n    UPDATE_COMBATANT,\n    ROLL_INITIATIVE,\n    COPY_COMBATANT,\n} from \"./types\";\n\nconst initialState: CombatantState = {\n    combatants: [],\n};\n\nexport function combatantReducer(state = initialState, action: CombantantActionTypes): CombatantState {\n    switch (action.type) {\n        case ADD_COMBATANT:\n            return {\n                combatants: [...state.combatants, action.payload],\n            };\n\n        case DELETE_COMBATANT:\n            return {\n                combatants: state.combatants.filter((c) => c.id !== action.id),\n            };\n\n        case UPDATE_REMAINING_HP:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n                    return {\n                        ...c,\n                        hitPoints: {\n                            ...c.hitPoints,\n                            remaining:\n                                action.payload.value > 0\n                                    ? action.payload.value <= c.hitPoints.max\n                                        ? Math.round(action.payload.value)\n                                        : c.hitPoints.max\n                                    : 0,\n                        },\n                    };\n                }),\n            };\n\n        case UPDATE_INITIATIVE:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n                    return {\n                        ...c,\n                        initiative: action.payload.value,\n                    };\n                }),\n            };\n\n        case UPDATE_COMBATANT:\n            return {\n                combatants: state.combatants.map((c) => {\n                    if (c.id !== action.payload.id) return c;\n                    return action.payload.combatant;\n                }),\n            };\n\n        case ROLL_INITIATIVE:\n            return {\n                combatants: state.combatants.map((c) => {\n                    return {\n                        ...c,\n                        initiative: Math.floor(Math.random() * 20) + 1 + c.initiativeModifier,\n                    };\n                }),\n            };\n\n        case COPY_COMBATANT:\n            const filtered = state.combatants.filter((c) => c.id === action.id);\n            const copied = filtered.length === 1 ? filtered[0] : null;\n\n            if (copied)\n                return {\n                    combatants: [...state.combatants, { ...copied, id: uuid() }],\n                };\n            else return state;\n        default:\n            return state;\n    }\n}\n","import { RootState } from \"./index\";\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem(\"state\");\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nexport const saveState = (state: RootState) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(\"state\", serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n","import { combineReducers, createStore, Store } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { combatantReducer } from \"./combatant/reducer\";\nimport { loadState, saveState } from \"./persist-helpers\";\n\nconst rootReducer = combineReducers({\n    combantants: combatantReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\n//@ts-ignore\nconst persistedState = loadState();\nexport const store: Store = createStore(rootReducer, persistedState, devToolsEnhancer({}));\n\n// Persist store to local storage\nstore.subscribe(() => {\n    saveState({\n        combantants: store.getState().combantants,\n    });\n});\n","import { ICombatant } from \"types/combatant\";\n\nexport interface CombatantState {\n    combatants: ICombatant[];\n}\n\nexport interface IUpdateValuePayload {\n    id: string;\n    value: number;\n}\n\nexport interface IUpdateCombatantPayload {\n    id: string;\n    combatant: ICombatant;\n}\n\nexport const ADD_COMBATANT = \"ADD_COMBATANT\";\nexport const DELETE_COMBATANT = \"DELETE_COMBATANT\";\nexport const UPDATE_COMBATANT = \"UPDATE_COMBATANT\";\nexport const COPY_COMBATANT = \"COPY_COMBATANT\";\nexport const UPDATE_REMAINING_HP = \"UPDATE_REMAINING_HP\";\nexport const UPDATE_INITIATIVE = \"UPDATE_INITIATIVE\";\nexport const ROLL_INITIATIVE = \"ROLL_INITIATIVE\";\n\ninterface IAddCombatantAction {\n    type: typeof ADD_COMBATANT;\n    payload: ICombatant;\n}\n\ninterface IDeleteCombatantAction {\n    type: typeof DELETE_COMBATANT;\n    id: string;\n}\n\ninterface IUpdateRemainingHpAction {\n    type: typeof UPDATE_REMAINING_HP;\n    payload: IUpdateValuePayload;\n}\n\ninterface IUpdateInitiativeAction {\n    type: typeof UPDATE_INITIATIVE;\n    payload: IUpdateValuePayload;\n}\n\ninterface IUpdateCombatantAction {\n    type: typeof UPDATE_COMBATANT;\n    payload: IUpdateCombatantPayload;\n}\n\ninterface IRollInitiativeAction {\n    type: typeof ROLL_INITIATIVE;\n}\n\ninterface ICopyCombatantAction {\n    type: typeof COPY_COMBATANT;\n    id: string;\n}\n\nexport type CombantantActionTypes =\n    | IAddCombatantAction\n    | IDeleteCombatantAction\n    | IUpdateRemainingHpAction\n    | IUpdateInitiativeAction\n    | IUpdateCombatantAction\n    | IRollInitiativeAction\n    | ICopyCombatantAction;\n","import React, { Dispatch } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CombantantTypes, ICombatantHitPoints } from \"types/combatant\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, ADD_COMBATANT } from \"store/combatant/types\";\nimport { v4 as uuid } from \"uuid\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport interface IAddCombatantFormProps {\n    open: boolean;\n    onClose: () => void;\n}\n\nexport const AddCombatantForm: React.FC<IAddCombatantFormProps> = ({ open, onClose }) => {\n    const cls = useStyles();\n    const [name, setName] = React.useState(\"Combatant\");\n    const [type, setType] = React.useState<CombantantTypes>(\"character\");\n    const [hitpoints, setHp] = React.useState<string>(\"10\");\n    const [ac, setAc] = React.useState(\"13\");\n    const [initMod, setInitMod] = React.useState(\"0\");\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    // Evaluate form validity\n    const acVal = parseInt(ac);\n    const initVal = parseInt(initMod);\n    const hpVal = isNaN(parseInt(hitpoints)) ? 0 : parseInt(hitpoints);\n    const hp = { max: hpVal, remaining: hpVal, temporary: 0 };\n    const isValidName = name.length >= 3;\n    const isValidType = type.length > 0;\n    const isValidHp = hp.max >= hp.remaining && hp.max > 0 && hp.remaining > 0 && hp.temporary >= 0;\n    const isValidAc = !isNaN(acVal) && acVal > 0;\n    const isValidInitMod = !isNaN(initVal) && initVal >= -10 && initVal <= 10;\n    const formValid = isValidName && isValidType && isValidHp && isValidAc && isValidInitMod;\n\n    const clearForm = () => {\n        setName(\"Combatant\");\n        setType(\"character\");\n        setHp(\"10\");\n        setAc(\"13\");\n        setInitMod(\"0\");\n    };\n\n    // Form submission handler\n    const handleSubmit = () => {\n        dispatch({\n            type: ADD_COMBATANT,\n            payload: {\n                id: uuid(),\n                armorClass: acVal,\n                conditions: [],\n                hitPoints: hp,\n                initiative: 10,\n                initiativeModifier: initVal,\n                name,\n                type,\n            },\n        });\n\n        clearForm();\n        onClose();\n    };\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (formValid) handleSubmit();\n    };\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setType(event.target.value as CombantantTypes);\n    };\n\n    const types: CombantantTypes[] = [\"character\", \"ally\", \"hostile\", \"neutral\"];\n\n    return (\n        <Dialog maxWidth=\"sm\" open={open} onClose={() => onClose()}>\n            <DialogTitle>Add Combatant</DialogTitle>\n\n            {/* Form content */}\n            <DialogContent>\n                <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n\n                    <div className={cls.formWrapper}>\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Armor Class\"\n                            type=\"number\"\n                            fullWidth\n                            value={ac}\n                            onChange={(e) => {\n                                setAc(e.target.value);\n                            }}\n                            inputProps={{ min: 0 }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"HP\"\n                            type=\"number\"\n                            fullWidth\n                            value={hitpoints}\n                            onChange={(e) => {\n                                setHp(e.target.value);\n                            }}\n                            inputProps={{ min: 0 }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Initiative Mod\"\n                            type=\"number\"\n                            fullWidth\n                            value={initMod}\n                            onChange={(e) => {\n                                setInitMod(e.target.value);\n                            }}\n                            inputProps={{ min: 0 }}\n                            required\n                        />\n                    </div>\n                    <FormControl fullWidth>\n                        <InputLabel>Combatant Type</InputLabel>\n                        <Select value={type} onChange={handleChange} style={{ width: \"100%\" }}>\n                            {types.map((type) => (\n                                <MenuItem key={type} value={type}>\n                                    {type}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={handleSubmit}\n                    disabled={!formValid}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    formWrapper: {\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        [theme.breakpoints.down(\"xs\")]: {\n            flexWrap: \"wrap\",\n        },\n    },\n}));\n","import React, { Dispatch } from \"react\";\nimport { ICombatant } from \"types/combatant\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, UPDATE_INITIATIVE } from \"store/combatant/types\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport interface IUpdateInitFormProps {\n    open: boolean;\n    onClose: () => void;\n    combatant: ICombatant;\n}\n\nexport const UpdateInitForm: React.FC<IUpdateInitFormProps> = ({ open, onClose, combatant }) => {\n    const [init, setInit] = React.useState(`${combatant.initiative}`);\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    // Evaluate form validity\n    const initVal = parseInt(init);\n    const isValidInit = !isNaN(initVal) && initVal > 0 && initVal <= 30;\n\n    // Form submission handler\n    const handleSubmit = () => {\n        dispatch({\n            type: UPDATE_INITIATIVE,\n            payload: {\n                id: combatant.id,\n                value: initVal,\n            },\n        });\n\n        onClose();\n    };\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (isValidInit) handleSubmit();\n    };\n\n    return (\n        <Dialog maxWidth=\"sm\" open={open} onClose={() => onClose()}>\n            <DialogTitle>Update Initiative</DialogTitle>\n\n            {/* Form content */}\n            <DialogContent>\n                <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Initiative\"\n                        type=\"number\"\n                        fullWidth\n                        value={init}\n                        onChange={(e) => setInit(e.target.value)}\n                        required\n                        inputProps={{ min: 0 }}\n                    />\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={handleSubmit}\n                    disabled={!isValidInit}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { Dispatch } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CombantantTypes, ICombatantHitPoints, ICombatant } from \"types/combatant\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, UPDATE_COMBATANT } from \"store/combatant/types\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport interface IEditCombatantFormProps {\n    open: boolean;\n    onClose: () => void;\n    combatant: ICombatant;\n}\n\nexport const EditCombatantForm: React.FC<IEditCombatantFormProps> = ({ open, onClose, combatant }) => {\n    const cls = useStyles();\n    const [name, setName] = React.useState(combatant.name);\n    const [type, setType] = React.useState<CombantantTypes>(combatant.type);\n    const [hitpoints, setHp] = React.useState<string>(`${combatant.hitPoints.max}`);\n    const [ac, setAc] = React.useState(`${combatant.armorClass}`);\n    const [initMod, setInitMod] = React.useState(`${combatant.initiativeModifier}`);\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    // Evaluate form validity\n    const acVal = parseInt(ac);\n    const initVal = parseInt(initMod);\n    const hpVal = isNaN(parseInt(hitpoints)) ? 0 : parseInt(hitpoints);\n    const hp = { max: hpVal, remaining: hpVal, temporary: 0 };\n    const isValidName = name.length >= 3;\n    const isValidType = type.length > 0;\n    const isValidHp = hp.max >= hp.remaining && hp.max > 0 && hp.remaining > 0 && hp.temporary >= 0;\n    const isValidAc = !isNaN(acVal) && acVal > 0;\n    const isValidInitMod = !isNaN(initVal) && initVal >= -10 && initVal <= 10;\n    const formValid = isValidName && isValidType && isValidHp && isValidAc && isValidInitMod;\n\n    // Form submission handler\n    const handleSubmit = () => {\n        dispatch({\n            type: UPDATE_COMBATANT,\n            payload: {\n                id: combatant.id,\n                combatant: {\n                    id: combatant.id,\n                    armorClass: acVal,\n                    conditions: combatant.conditions,\n                    hitPoints: hp,\n                    initiative: combatant.initiative,\n                    initiativeModifier: initVal,\n                    name,\n                    type,\n                },\n            },\n        });\n\n        onClose();\n    };\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (formValid) handleSubmit();\n    };\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setType(event.target.value as CombantantTypes);\n    };\n\n    const types: CombantantTypes[] = [\"character\", \"ally\", \"hostile\", \"neutral\"];\n\n    return (\n        <Dialog maxWidth=\"sm\" open={open} onClose={() => onClose()}>\n            <DialogTitle>Edit Combatant</DialogTitle>\n\n            {/* Form content */}\n            <DialogContent>\n                <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n\n                    <div className={cls.formWrapper}>\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Armor Class\"\n                            type=\"number\"\n                            fullWidth\n                            value={ac}\n                            onChange={(e) => {\n                                setAc(e.target.value);\n                            }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"HP\"\n                            type=\"number\"\n                            fullWidth\n                            value={hitpoints}\n                            onChange={(e) => {\n                                setHp(e.target.value);\n                            }}\n                            required\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Initiative Mod\"\n                            type=\"number\"\n                            fullWidth\n                            value={initMod}\n                            onChange={(e) => {\n                                setInitMod(e.target.value);\n                            }}\n                            required\n                        />\n                    </div>\n                    <FormControl fullWidth>\n                        <InputLabel>Combatant Type</InputLabel>\n                        <Select value={type} onChange={handleChange} style={{ width: \"100%\" }}>\n                            {types.map((type) => (\n                                <MenuItem key={type} value={type}>\n                                    {type}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ fontWeight: \"bold\" }}\n                    onClick={handleSubmit}\n                    disabled={!formValid}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    formWrapper: {\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        [theme.breakpoints.down(\"xs\")]: {\n            flexWrap: \"wrap\",\n        },\n    },\n}));\n","import React, { Dispatch } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ICombatant } from \"types/combatant\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport { red, green, amber, grey } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/AddRounded\";\nimport MinusIcon from \"@material-ui/icons/RemoveRounded\";\nimport { IMaterialColor } from \"types/material\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, UPDATE_REMAINING_HP } from \"store/combatant/types\";\n\nexport interface IHealthBarProps {\n    combatant: ICombatant;\n    color?: IMaterialColor;\n    height?: number;\n    width?: number;\n    showTools?: boolean;\n}\n\nexport const HealthBar: React.FC<IHealthBarProps> = ({ combatant, height, width, showTools, color }) => {\n    const [amount, setAmount] = React.useState<string>(\"5\");\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    const { hitPoints: hp } = combatant;\n    const isHealthy = hp.remaining >= hp.max * 0.666;\n    const isBloodied = hp.remaining <= hp.max * 0.3333;\n    const isInjured = !isHealthy && !isBloodied;\n\n    const maxWidth = width || 100;\n    const maxHeight = height || 10;\n    const healthPercentage = Math.round((hp.remaining / hp.max) * maxWidth);\n    const cls = useStyles({ height: maxHeight, width: maxWidth, remaining: healthPercentage, color: color || grey });\n\n    const bg = isHealthy ? cls.healthy : isInjured ? cls.injured : isBloodied ? cls.bloodied : null;\n    const show = showTools !== undefined ? showTools : true;\n\n    const updateHandler = (method: \"ADD\" | \"REMOVE\") => () => {\n        const newVal = parseInt(amount);\n\n        if (newVal && newVal >= 1) {\n            dispatch({\n                type: UPDATE_REMAINING_HP,\n                payload: {\n                    id: combatant.id,\n                    value: method === \"ADD\" ? hp.remaining + newVal : hp.remaining - newVal,\n                },\n            });\n        }\n\n        setAmount(\"5\");\n    };\n\n    return (\n        <div style={{ position: \"relative\" }}>\n            <Tooltip title={`HP: ${hp.remaining} / ${hp.max} - Temp: ${hp.temporary}`}>\n                <div className={cls.outer}>\n                    <div className={clsx(cls.inner, bg)}></div>\n                </div>\n            </Tooltip>\n            {show && (\n                <div\n                    style={{\n                        width: maxWidth,\n                        height: 15,\n                        position: \"absolute\",\n                        top: maxHeight + 3,\n                        left: 0,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Tooltip title=\"Apply Indicated Damage\">\n                        <MinusIcon onClick={updateHandler(\"REMOVE\")} className={clsx(cls.icon, cls.minus)} />\n                    </Tooltip>\n                    <Tooltip title=\"Amount to Adjust Health By\">\n                        <input\n                            type=\"number\"\n                            value={amount}\n                            onChange={(e) => {\n                                setAmount(e.target.value);\n                            }}\n                            className={cls.healthInput}\n                            min={1}\n                        />\n                    </Tooltip>\n                    <Tooltip title=\"Heal Indicated Ammount\">\n                        <AddIcon onClick={updateHandler(\"ADD\")} className={clsx(cls.icon, cls.plus)} />\n                    </Tooltip>\n                </div>\n            )}\n        </div>\n    );\n};\n\ninterface IStyleProps {\n    height: number;\n    width: number;\n    remaining: number;\n    color: IMaterialColor;\n}\nconst useStyles = makeStyles((theme) => ({\n    outer: {\n        width: (props: IStyleProps) => props.width,\n        height: (props: IStyleProps) => props.height,\n        background: theme.palette.grey[300],\n        borderRadius: (props: IStyleProps) => Math.round(props.height / 2),\n        position: \"relative\",\n    },\n    inner: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        background: red[300],\n        borderRadius: (props: IStyleProps) => Math.round(props.height / 2),\n        height: (props: IStyleProps) => props.height,\n        width: (props: IStyleProps) => props.remaining,\n        transition: \"all 275ms ease-in-out\",\n    },\n    healthy: {\n        background: green[\"A400\"],\n    },\n    injured: {\n        background: amber[\"A400\"],\n    },\n    bloodied: {\n        background: red[\"A400\"],\n    },\n    healthInput: {\n        width: 40,\n        border: \"none\",\n        background: \"transparent\",\n        color: (props: IStyleProps) => props.color[500],\n        fontSize: 14,\n        textAlign: \"center\",\n        \"&:focus\": {\n            outline: \"none\",\n        },\n    },\n    icon: {\n        fontSize: 25,\n        padding: 2,\n        \"&:hover\": {\n            cursor: \"pointer\",\n        },\n    },\n    minus: {\n        color: red[300],\n        marginRight: 13,\n        \"&:hover\": {\n            color: red[500],\n            transition: \"all 200ms ease-in-out\",\n        },\n    },\n    plus: {\n        color: green[300],\n        \"&:hover\": {\n            color: green[500],\n            transition: \"all 200ms ease-in-out\",\n        },\n    },\n}));\n","import React, { Dispatch } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ICombatant } from \"types/combatant\";\nimport { IMaterialColor } from \"types/material\";\nimport { useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, DELETE_COMBATANT, UPDATE_REMAINING_HP, COPY_COMBATANT } from \"store/combatant/types\";\nimport { UpdateInitForm } from \"./form-update-initiative\";\nimport { EditCombatantForm } from \"./form-edit-combatant\";\nimport { HealthBar } from \"components/health-bar\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport DeleteIcon from \"@material-ui/icons/DeleteRounded\";\nimport HeartIcon from \"@material-ui/icons/FavoriteRounded\";\nimport ShieldIcon from \"@material-ui/icons/SecurityRounded\";\nimport InitiativeIcon from \"@material-ui/icons/WatchLaterRounded\";\nimport EditIcon from \"@material-ui/icons/EditRounded\";\nimport CopyIcon from \"@material-ui/icons/FileCopyRounded\";\nimport SkullIcon from \"./skull.svg\";\nimport { red, green, blue, orange, yellow, blueGrey } from \"@material-ui/core/colors\";\n\nexport interface ICombatantCardProps {\n    combatant: ICombatant;\n}\n\nexport const CombatantCard: React.FC<ICombatantCardProps> = ({ combatant }) => {\n    const typeColor = getBackgroundByType(combatant.type);\n    const cls = useStyles({ color: typeColor });\n    const { name, type, id, armorClass: ac, initiative } = combatant;\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n    const [openInitDialog, setOpenInitDialog] = React.useState(false);\n    const [openEditDialog, setOpenEditDialog] = React.useState(false);\n    const [showBadge, setShowBadge] = React.useState(false);\n\n    const isDead = combatant.hitPoints.remaining <= 0;\n\n    return (\n        <div className={clsx(cls.container, cls.wrapper)}>\n            {/* Combatant Name Display */}\n            <div className={cls.container}>\n                <Typography style={{ color: typeColor[500], fontWeight: 600, fontSize: 18 }} noWrap>\n                    {name || \"Rezkin\"}\n                </Typography>\n                <Tooltip title={type}>\n                    <Chip className={cls.typeChip} label={type === \"character\" ? \"PC\" : type} size=\"small\" />\n                </Tooltip>\n\n                <Tooltip title={`Armor Class: ${ac}`}>\n                    <Chip\n                        className={cls.typeChip}\n                        label={ac}\n                        size=\"small\"\n                        icon={<ShieldIcon className={cls.shieldIcon} />}\n                    />\n                </Tooltip>\n                <Tooltip title={`Initiative: ${initiative}`}>\n                    <Badge\n                        color=\"secondary\"\n                        badgeContent={\n                            combatant.initiativeModifier >= 0 ? (\n                                <strong>{`+${combatant.initiativeModifier}`}</strong>\n                            ) : (\n                                <strong>{`${combatant.initiativeModifier}`}</strong>\n                            )\n                        }\n                        invisible={!showBadge}\n                    >\n                        <div onMouseEnter={() => setShowBadge(true)} onMouseLeave={() => setShowBadge(false)}>\n                            <Chip\n                                className={cls.initChip}\n                                label={initiative}\n                                size=\"small\"\n                                onClick={() => setOpenInitDialog(true)}\n                                icon={<InitiativeIcon className={cls.initIcon} />}\n                                clickable\n                            />\n                        </div>\n                    </Badge>\n                </Tooltip>\n                <Tooltip title={\"Edit Combatant Details\"}>\n                    <EditIcon onClick={() => setOpenEditDialog(true)} className={clsx(cls.icon, cls.edit)} />\n                </Tooltip>\n                <Tooltip title={\"Copy Combatant\"}>\n                    <CopyIcon\n                        onClick={() => dispatch({ type: COPY_COMBATANT, id })}\n                        className={clsx(cls.icon, cls.copy)}\n                    />\n                </Tooltip>\n                <Tooltip title={\"Delete Combatant\"}>\n                    <DeleteIcon\n                        onClick={() => dispatch({ type: DELETE_COMBATANT, id })}\n                        className={clsx(cls.icon, cls.delete)}\n                    />\n                </Tooltip>\n            </div>\n\n            {/* Combatant Health Meter */}\n            <div className={clsx(cls.container, cls.healthWrapper)}>\n                {!isDead && <HeartIcon fontSize=\"small\" style={{ color: red[\"A400\"], marginRight: 2 }} />}\n                {isDead && <img src={SkullIcon} className={cls.deadIcon} alt=\"Skull Icon\" />}\n                <HealthBar combatant={combatant} color={typeColor} />\n                <input\n                    className={cls.healthInput}\n                    value={combatant.hitPoints.remaining}\n                    onChange={(e) => {\n                        const value = parseInt(e.target.value) || 0;\n\n                        if (value <= combatant.hitPoints.max)\n                            dispatch({\n                                type: UPDATE_REMAINING_HP,\n                                payload: {\n                                    id: combatant.id,\n                                    value,\n                                },\n                            });\n                    }}\n                    type=\"number\"\n                    min={0}\n                />\n            </div>\n\n            {/* Form Controls */}\n            <UpdateInitForm open={openInitDialog} onClose={() => setOpenInitDialog(false)} combatant={combatant} />\n            <EditCombatantForm open={openEditDialog} onClose={() => setOpenEditDialog(false)} combatant={combatant} />\n        </div>\n    );\n};\n\ninterface IStyleProps {\n    color: IMaterialColor;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        border: (props: IStyleProps) => `${props.color[400]} 2px solid`,\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(2),\n        borderRadius: 5,\n        width: \"100%\",\n        background: (props: IStyleProps) => props.color[50],\n        overflowX: \"auto\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        [theme.breakpoints.down(\"xs\")]: {\n            justifyContent: \"center\",\n        },\n        ...theme.scrollbar,\n    },\n    healthWrapper: {\n        [theme.breakpoints.down(\"xs\")]: {\n            margin: theme.spacing(0.5),\n        },\n    },\n    icon: {\n        padding: theme.spacing(0.1),\n        \"&:hover\": {\n            cursor: \"pointer\",\n        },\n    },\n    edit: {\n        color: blueGrey[300],\n        marginLeft: 2,\n        \"&:hover\": {\n            color: blueGrey[400],\n        },\n    },\n    copy: {\n        color: blueGrey[200],\n        \"&:hover\": {\n            color: blueGrey[300],\n        },\n    },\n    delete: {\n        color: red[300],\n        \"&:hover\": {\n            color: red[500],\n        },\n    },\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    typeChip: {\n        color: theme.palette.common.white,\n        fontWeight: \"bold\",\n        marginLeft: theme.spacing(0.5),\n        background: (props: IStyleProps) => props.color[400],\n    },\n    shieldIcon: {\n        color: yellow[600],\n        fontWeight: \"bold\",\n    },\n    initChip: {\n        color: theme.palette.common.white,\n        fontWeight: \"bold\",\n        marginLeft: theme.spacing(0.5),\n        background: (props: IStyleProps) => props.color[400],\n        \"&:hover\": {\n            cursor: \"pointer\",\n            background: (props: IStyleProps) => props.color[600],\n            transition: \"all 200ms ease-in-out\",\n        },\n        \"&:focus\": {\n            background: (props: IStyleProps) => props.color[400],\n        },\n    },\n    initIcon: {\n        color: theme.palette.common.white,\n        fontWeight: \"bold\",\n    },\n    spacer: {\n        flexGrow: 1,\n    },\n    healthInput: {\n        width: 50,\n        border: \"none\",\n        background: \"transparent\",\n        color: (props: IStyleProps) => props.color[500],\n        fontSize: 18,\n        textAlign: \"center\",\n        \"&:focus\": {\n            outline: \"none\",\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            fontSize: 15,\n        },\n    },\n    deadIcon: {\n        height: 21,\n        marginRight: 2,\n    },\n}));\n\n// @ts-ignore\nconst getBackgroundByType: (type: CombantantTypes) => IMaterialColor = (type) => {\n    switch (type) {\n        case \"character\":\n            return blue;\n        case \"hostile\":\n            return red;\n        case \"ally\":\n            return green;\n        case \"neutral\":\n            return orange;\n    }\n};\n","import React, { Dispatch } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CombantantActionTypes, ROLL_INITIATIVE } from \"store/combatant/types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { RootState } from \"store\";\nimport { AddCombatantForm } from \"./form-add-combatant\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { CombatantCard } from \"./combatant-card\";\nimport SwordIcon from \"./swords.svg\";\nimport PersonIcon from \"@material-ui/icons/PersonRounded\";\nimport RollInitIcon from \"@material-ui/icons/PhotoFilter\";\n\nexport const InitiativeTracker: React.FC = () => {\n    const cls = useStyles();\n    const { combatants } = useSelector((state: RootState) => state.combantants);\n    const [openCombatantForm, setOpenCombatantForm] = React.useState(false);\n    const dispatch = useDispatch<Dispatch<CombantantActionTypes>>();\n\n    const sorted = combatants.sort((a, b) => b.initiative - a.initiative);\n\n    return (\n        <div className={cls.wrapper}>\n            <div className={cls.container}>\n                <img src={SwordIcon} className={cls.headerIcon} alt=\"Sword Icon\" />\n                <Typography color=\"primary\" variant=\"h3\">\n                    Combat Tracker\n                </Typography>\n            </div>\n\n            <div style={{ marginTop: 4, marginBottom: 4 }} className={cls.container}>\n                <Button\n                    style={{ marginRight: 2, color: \"white\", fontWeight: \"bold\" }}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    startIcon={<PersonIcon />}\n                    onClick={() => setOpenCombatantForm(true)}\n                    size=\"small\"\n                >\n                    Combatant\n                </Button>\n                <Button\n                    style={{ margin: 2, color: \"white\", fontWeight: \"bold\" }}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    onClick={() => dispatch({ type: ROLL_INITIATIVE })}\n                    startIcon={<RollInitIcon />}\n                    size=\"small\"\n                >\n                    Roll Initiative\n                </Button>\n            </div>\n\n            {/* Form Controls */}\n            <AddCombatantForm open={openCombatantForm} onClose={() => setOpenCombatantForm(false)} />\n\n            {/* Display Combatant List */}\n            <Flipper flipKey={sorted.map((c) => c.id).join(\" \")}>\n                <ul style={{ padding: 0, listStyleType: \"none\", margin: 0 }}>\n                    {sorted.map((c) => (\n                        <Flipped key={c.id} flipId={c.id}>\n                            <li style={{ listStyleType: \"none\" }}>\n                                <CombatantCard combatant={c} />\n                            </li>\n                        </Flipped>\n                    ))}\n                </ul>\n            </Flipper>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        margin: 0,\n        padding: 0,\n    },\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n    },\n    headerIcon: {\n        height: 40,\n        marginRight: theme.spacing(1),\n        [theme.breakpoints.down(\"xs\")]: {\n            height: 25,\n        },\n    },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { InitiativeTracker } from \"./initiative-tracker\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nexport const HomePage: React.FC = () => {\n    const cls = useStyles();\n\n    return (\n        <Grid container justify=\"center\" className={cls.root}>\n            <Grid item sm={12} md={8} lg={7} xl={6}>\n                <InitiativeTracker />\n            </Grid>\n        </Grid>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n        padding: theme.spacing(2),\n    },\n}));\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Switch, Route, Router, Redirect } from \"react-router-dom\";\nimport { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport ReactGA from \"react-ga\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nimport { HomePage } from \"./views/home\";\n\n// Define global style constants\nconst PRIMARY_COLOR = \"#4289b3\";\nconst SECONDARY_COLOR = \"#6153cc\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n    interface Theme {\n        scrollbar: {\n            boxSizing: React.CSSProperties[\"boxSizing\"];\n            overflow: React.CSSProperties[\"overflow\"];\n            \"&::-webkit-scrollbar-track\": {\n                background: React.CSSProperties[\"background\"];\n            };\n            \"&::-webkit-scrollbar\": {\n                width: React.CSSProperties[\"width\"];\n            };\n            \"&::-webkit-scrollbar-thumb\": {\n                borderRadius: React.CSSProperties[\"borderRadius\"];\n                background: React.CSSProperties[\"background\"];\n                height: React.CSSProperties[\"height\"];\n            };\n        };\n    }\n\n    // allow configuration using `createMuiTheme`\n    interface ThemeOptions {\n        scrollbar?: {\n            boxSizing?: React.CSSProperties[\"boxSizing\"];\n            overflow?: React.CSSProperties[\"overflow\"];\n            \"&::-webkit-scrollbar-track\"?: {\n                background: React.CSSProperties[\"background\"];\n            };\n            \"&::-webkit-scrollbar\"?: {\n                width: React.CSSProperties[\"width\"];\n            };\n            \"&::-webkit-scrollbar-thumb\"?: {\n                borderRadius: React.CSSProperties[\"borderRadius\"];\n                background: React.CSSProperties[\"background\"];\n                height: React.CSSProperties[\"height\"];\n            };\n        };\n    }\n}\n\n// Generate custom Material UI theme\nlet theme = createMuiTheme({\n    // Setup global color palette\n    palette: {\n        primary: {\n            main: PRIMARY_COLOR,\n        },\n        secondary: {\n            main: SECONDARY_COLOR,\n        },\n        error: {\n            main: red[600],\n        },\n    },\n    // Setup global scrollbar mixin\n    scrollbar: {\n        boxSizing: \"border-box\",\n        overflow: \"auto\",\n        \"&::-webkit-scrollbar-track\": {\n            background: \"transparent\",\n        },\n        \"&::-webkit-scrollbar\": {\n            width: \"6px\",\n        },\n        \"&::-webkit-scrollbar-thumb\": {\n            borderRadius: \"3px\",\n            background: \"#cacad0\",\n            height: \"20px\",\n        },\n    },\n    // Declare default overrides\n    overrides: {\n        // Custom tooltip\n        MuiTooltip: {\n            tooltip: {\n                backgroundColor: PRIMARY_COLOR,\n                fontWeight: \"bold\",\n            },\n            arrow: {\n                color: PRIMARY_COLOR,\n            },\n        },\n    },\n});\n\n// Enable Material UI Responsive Fonts\ntheme = responsiveFontSizes(theme);\n\n// Setup browser history API for\n//  usage with Google Analytics\nconst history = createBrowserHistory({ basename: process.env.REACT_APP_BASENAME as string });\n\n// Initialize Google Analytics page view tracking\nhistory.listen((location) => {\n    ReactGA.set({ page: location.pathname }); // Update the user's current page\n    ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\n\n// Setup Google Analytics\nReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS as string);\n\n// Setup App\n// @ts-ignore\nexport const App: React.FC = () => {\n    React.useEffect(() => {\n        ReactGA.pageview(window.location.pathname);\n    }, []);\n\n    return (\n        <React.Fragment>\n            {/* Setup CSS Baseline for Material UI */}\n            <CssBaseline />\n            {/* Redux Provider */}\n            <Provider store={store}>\n                {/* Provide Material UI Theme to App */}\n                <ThemeProvider theme={theme}>\n                    {/* Instantiate Primary Application Router */}\n                    <Router history={history}>\n                        <Switch>\n                            <Route exact path={\"/\"} component={HomePage} />\n                            <Redirect to=\"/\" />\n                        </Switch>\n                    </Router>\n                </ThemeProvider>\n            </Provider>\n        </React.Fragment>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/skull.246b879b.svg\";"],"sourceRoot":""}